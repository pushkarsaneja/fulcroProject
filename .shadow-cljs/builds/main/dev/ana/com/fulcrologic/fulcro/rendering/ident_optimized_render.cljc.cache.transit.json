["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__5041__auto__ = c;\nif(cljs.core.truth_(and__5041__auto__)){\nreturn ident;\n} else {\nreturn and__5041__auto__;\n}\n})())){\nvar map__46034 = app__$1;\nvar map__46034__$1 = cljs.core.__destructure_map(map__46034);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46034__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__5043__auto__ = (com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_computed.call(null,c));\nif(cljs.core.truth_(or__5043__auto__)){\nreturn or__5043__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = (function (){var G__46035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident);\nvar G__46036 = prior_computed;\nreturn (com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2(G__46035,G__46036) : com.fulcrologic.fulcro.components.computed.call(null,G__46035,G__46036));\n})();\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c),\"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"], null);\n}),null)),null,1292854812,null);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",(function (){var G__46037 = com.fulcrologic.fulcro.components.react_type(c);\nreturn (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(G__46037) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,G__46037));\n})(),\"queries for data that changed, but does not have an ident.\"], null);\n}),null)),null,388428007,null);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__46038 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__46039 = null;\nvar count__46040 = (0);\nvar i__46041 = (0);\nwhile(true){\nif((i__46041 < count__46040)){\nvar c = chunk__46039.cljs$core$IIndexed$_nth$arity$2(null,i__46041);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__46151 = seq__46038;\nvar G__46152 = chunk__46039;\nvar G__46153 = count__46040;\nvar G__46154 = (i__46041 + (1));\nseq__46038 = G__46151;\nchunk__46039 = G__46152;\ncount__46040 = G__46153;\ni__46041 = G__46154;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46038);\nif(temp__5753__auto__){\nvar seq__46038__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46038__$1)){\nvar c__5565__auto__ = cljs.core.chunk_first(seq__46038__$1);\nvar G__46155 = cljs.core.chunk_rest(seq__46038__$1);\nvar G__46156 = c__5565__auto__;\nvar G__46157 = cljs.core.count(c__5565__auto__);\nvar G__46158 = (0);\nseq__46038 = G__46155;\nchunk__46039 = G__46156;\ncount__46040 = G__46157;\ni__46041 = G__46158;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__46038__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__46159 = cljs.core.next(seq__46038__$1);\nvar G__46160 = null;\nvar G__46161 = (0);\nvar G__46162 = (0);\nseq__46038 = G__46159;\nchunk__46039 = G__46160;\ncount__46040 = G__46161;\ni__46041 = G__46162;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__46047 = app__$1;\nvar map__46047__$1 = cljs.core.__destructure_map(map__46047);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46047__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__46048 = cljs.core.deref(runtime_atom);\nvar map__46048__$1 = cljs.core.__destructure_map(map__46048);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46048__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__46049 = indexes;\nvar map__46049__$1 = cljs.core.__destructure_map(map__46049);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46049__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46049__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46049__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__5043__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__5043__auto__)){\nreturn or__5043__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__46050 = cljs.core.seq(classes);\nvar chunk__46051 = null;\nvar count__46052 = (0);\nvar i__46053 = (0);\nwhile(true){\nif((i__46053 < count__46052)){\nvar class$ = chunk__46051.cljs$core$IIndexed$_nth$arity$2(null,i__46053);\nvar seq__46071_46163 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__46073_46164 = null;\nvar count__46074_46165 = (0);\nvar i__46075_46166 = (0);\nwhile(true){\nif((i__46075_46166 < count__46074_46165)){\nvar component_46169 = chunk__46073_46164.cljs$core$IIndexed$_nth$arity$2(null,i__46075_46166);\nvar component_ident_46170 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_46169) : com.fulcrologic.fulcro.components.get_ident.call(null,component_46169));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_46170,component_46169);\n\n\nvar G__46171 = seq__46071_46163;\nvar G__46172 = chunk__46073_46164;\nvar G__46173 = count__46074_46165;\nvar G__46174 = (i__46075_46166 + (1));\nseq__46071_46163 = G__46171;\nchunk__46073_46164 = G__46172;\ncount__46074_46165 = G__46173;\ni__46075_46166 = G__46174;\ncontinue;\n} else {\nvar temp__5753__auto___46175 = cljs.core.seq(seq__46071_46163);\nif(temp__5753__auto___46175){\nvar seq__46071_46176__$1 = temp__5753__auto___46175;\nif(cljs.core.chunked_seq_QMARK_(seq__46071_46176__$1)){\nvar c__5565__auto___46177 = cljs.core.chunk_first(seq__46071_46176__$1);\nvar G__46178 = cljs.core.chunk_rest(seq__46071_46176__$1);\nvar G__46179 = c__5565__auto___46177;\nvar G__46180 = cljs.core.count(c__5565__auto___46177);\nvar G__46181 = (0);\nseq__46071_46163 = G__46178;\nchunk__46073_46164 = G__46179;\ncount__46074_46165 = G__46180;\ni__46075_46166 = G__46181;\ncontinue;\n} else {\nvar component_46182 = cljs.core.first(seq__46071_46176__$1);\nvar component_ident_46183 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_46182) : com.fulcrologic.fulcro.components.get_ident.call(null,component_46182));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_46183,component_46182);\n\n\nvar G__46184 = cljs.core.next(seq__46071_46176__$1);\nvar G__46185 = null;\nvar G__46186 = (0);\nvar G__46187 = (0);\nseq__46071_46163 = G__46184;\nchunk__46073_46164 = G__46185;\ncount__46074_46165 = G__46186;\ni__46075_46166 = G__46187;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__46188 = seq__46050;\nvar G__46189 = chunk__46051;\nvar G__46190 = count__46052;\nvar G__46191 = (i__46053 + (1));\nseq__46050 = G__46188;\nchunk__46051 = G__46189;\ncount__46052 = G__46190;\ni__46053 = G__46191;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46050);\nif(temp__5753__auto__){\nvar seq__46050__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46050__$1)){\nvar c__5565__auto__ = cljs.core.chunk_first(seq__46050__$1);\nvar G__46192 = cljs.core.chunk_rest(seq__46050__$1);\nvar G__46193 = c__5565__auto__;\nvar G__46194 = cljs.core.count(c__5565__auto__);\nvar G__46195 = (0);\nseq__46050 = G__46192;\nchunk__46051 = G__46193;\ncount__46052 = G__46194;\ni__46053 = G__46195;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__46050__$1);\nvar seq__46082_46196 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__46084_46197 = null;\nvar count__46085_46198 = (0);\nvar i__46086_46199 = (0);\nwhile(true){\nif((i__46086_46199 < count__46085_46198)){\nvar component_46200 = chunk__46084_46197.cljs$core$IIndexed$_nth$arity$2(null,i__46086_46199);\nvar component_ident_46201 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_46200) : com.fulcrologic.fulcro.components.get_ident.call(null,component_46200));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_46201,component_46200);\n\n\nvar G__46202 = seq__46082_46196;\nvar G__46203 = chunk__46084_46197;\nvar G__46204 = count__46085_46198;\nvar G__46205 = (i__46086_46199 + (1));\nseq__46082_46196 = G__46202;\nchunk__46084_46197 = G__46203;\ncount__46085_46198 = G__46204;\ni__46086_46199 = G__46205;\ncontinue;\n} else {\nvar temp__5753__auto___46206__$1 = cljs.core.seq(seq__46082_46196);\nif(temp__5753__auto___46206__$1){\nvar seq__46082_46207__$1 = temp__5753__auto___46206__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__46082_46207__$1)){\nvar c__5565__auto___46208 = cljs.core.chunk_first(seq__46082_46207__$1);\nvar G__46210 = cljs.core.chunk_rest(seq__46082_46207__$1);\nvar G__46211 = c__5565__auto___46208;\nvar G__46212 = cljs.core.count(c__5565__auto___46208);\nvar G__46213 = (0);\nseq__46082_46196 = G__46210;\nchunk__46084_46197 = G__46211;\ncount__46085_46198 = G__46212;\ni__46086_46199 = G__46213;\ncontinue;\n} else {\nvar component_46214 = cljs.core.first(seq__46082_46207__$1);\nvar component_ident_46215 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_46214) : com.fulcrologic.fulcro.components.get_ident.call(null,component_46214));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_46215,component_46214);\n\n\nvar G__46216 = cljs.core.next(seq__46082_46207__$1);\nvar G__46217 = null;\nvar G__46218 = (0);\nvar G__46219 = (0);\nseq__46082_46196 = G__46216;\nchunk__46084_46197 = G__46217;\ncount__46085_46198 = G__46218;\ni__46086_46199 = G__46219;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__46221 = cljs.core.next(seq__46050__$1);\nvar G__46222 = null;\nvar G__46223 = (0);\nvar G__46224 = (0);\nseq__46050 = G__46221;\nchunk__46051 = G__46222;\ncount__46052 = G__46223;\ni__46053 = G__46224;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__46095 = app__$1;\nvar map__46095__$1 = cljs.core.__destructure_map(map__46095);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46095__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__46096 = cljs.core.deref(runtime_atom);\nvar map__46096__$1 = cljs.core.__destructure_map(map__46096);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46096__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__46097 = indexes;\nvar map__46097__$1 = cljs.core.__destructure_map(map__46097);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46097__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46097__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__46093_SHARP_,p2__46094_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__46093_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__46094_SHARP_) : class__GT_components.call(null,p2__46094_SHARP_)));\n}),cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n}),cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__46101 = app__$1;\nvar map__46101__$1 = cljs.core.__destructure_map(map__46101);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46101__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46101__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__46102 = cljs.core.deref(runtime_atom);\nvar map__46102__$1 = cljs.core.__destructure_map(map__46102);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46102__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46102__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46102__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46102__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__46103 = indexes;\nvar map__46103__$1 = cljs.core.__destructure_map(map__46103);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46103__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46103__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46103__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46103__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__46104 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__46104__$1 = cljs.core.__destructure_map(map__46104);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46104__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46104__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__46107_46230 = cljs.core.seq(limited_to_render);\nvar chunk__46109_46231 = null;\nvar count__46110_46232 = (0);\nvar i__46111_46233 = (0);\nwhile(true){\nif((i__46111_46233 < count__46110_46232)){\nvar c_46234 = chunk__46109_46231.cljs$core$IIndexed$_nth$arity$2(null,i__46111_46233);\nvar ident_46235 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_46234) : com.fulcrologic.fulcro.components.get_ident.call(null,c_46234));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_46235,c_46234);\n\n\nvar G__46236 = seq__46107_46230;\nvar G__46237 = chunk__46109_46231;\nvar G__46238 = count__46110_46232;\nvar G__46239 = (i__46111_46233 + (1));\nseq__46107_46230 = G__46236;\nchunk__46109_46231 = G__46237;\ncount__46110_46232 = G__46238;\ni__46111_46233 = G__46239;\ncontinue;\n} else {\nvar temp__5753__auto___46240 = cljs.core.seq(seq__46107_46230);\nif(temp__5753__auto___46240){\nvar seq__46107_46241__$1 = temp__5753__auto___46240;\nif(cljs.core.chunked_seq_QMARK_(seq__46107_46241__$1)){\nvar c__5565__auto___46242 = cljs.core.chunk_first(seq__46107_46241__$1);\nvar G__46243 = cljs.core.chunk_rest(seq__46107_46241__$1);\nvar G__46244 = c__5565__auto___46242;\nvar G__46245 = cljs.core.count(c__5565__auto___46242);\nvar G__46246 = (0);\nseq__46107_46230 = G__46243;\nchunk__46109_46231 = G__46244;\ncount__46110_46232 = G__46245;\ni__46111_46233 = G__46246;\ncontinue;\n} else {\nvar c_46247 = cljs.core.first(seq__46107_46241__$1);\nvar ident_46248 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_46247) : com.fulcrologic.fulcro.components.get_ident.call(null,c_46247));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_46248,c_46247);\n\n\nvar G__46249 = cljs.core.next(seq__46107_46241__$1);\nvar G__46250 = null;\nvar G__46251 = (0);\nvar G__46252 = (0);\nseq__46107_46230 = G__46249;\nchunk__46109_46231 = G__46250;\ncount__46110_46232 = G__46251;\ni__46111_46233 = G__46252;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__46116 = cljs.core.seq(limited_idents);\nvar chunk__46117 = null;\nvar count__46118 = (0);\nvar i__46119 = (0);\nwhile(true){\nif((i__46119 < count__46118)){\nvar i = chunk__46117.cljs$core$IIndexed$_nth$arity$2(null,i__46119);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__46253 = seq__46116;\nvar G__46254 = chunk__46117;\nvar G__46255 = count__46118;\nvar G__46256 = (i__46119 + (1));\nseq__46116 = G__46253;\nchunk__46117 = G__46254;\ncount__46118 = G__46255;\ni__46119 = G__46256;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46116);\nif(temp__5753__auto__){\nvar seq__46116__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46116__$1)){\nvar c__5565__auto__ = cljs.core.chunk_first(seq__46116__$1);\nvar G__46257 = cljs.core.chunk_rest(seq__46116__$1);\nvar G__46258 = c__5565__auto__;\nvar G__46259 = cljs.core.count(c__5565__auto__);\nvar G__46260 = (0);\nseq__46116 = G__46257;\nchunk__46117 = G__46258;\ncount__46118 = G__46259;\ni__46119 = G__46260;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__46116__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__46262 = cljs.core.next(seq__46116__$1);\nvar G__46263 = null;\nvar G__46264 = (0);\nvar G__46265 = (0);\nseq__46116 = G__46262;\nchunk__46117 = G__46263;\ncount__46118 = G__46264;\ni__46119 = G__46265;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__5043__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__5043__auto__)){\nreturn or__5043__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n}),cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__46122 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__46122__$1 = cljs.core.__destructure_map(map__46122);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46122__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46122__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__46124_46271 = cljs.core.seq(all_idents);\nvar chunk__46125_46272 = null;\nvar count__46126_46273 = (0);\nvar i__46127_46274 = (0);\nwhile(true){\nif((i__46127_46274 < count__46126_46273)){\nvar i_46275 = chunk__46125_46272.cljs$core$IIndexed$_nth$arity$2(null,i__46127_46274);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_46275);\n\n\nvar G__46276 = seq__46124_46271;\nvar G__46277 = chunk__46125_46272;\nvar G__46278 = count__46126_46273;\nvar G__46279 = (i__46127_46274 + (1));\nseq__46124_46271 = G__46276;\nchunk__46125_46272 = G__46277;\ncount__46126_46273 = G__46278;\ni__46127_46274 = G__46279;\ncontinue;\n} else {\nvar temp__5753__auto___46280 = cljs.core.seq(seq__46124_46271);\nif(temp__5753__auto___46280){\nvar seq__46124_46281__$1 = temp__5753__auto___46280;\nif(cljs.core.chunked_seq_QMARK_(seq__46124_46281__$1)){\nvar c__5565__auto___46282 = cljs.core.chunk_first(seq__46124_46281__$1);\nvar G__46283 = cljs.core.chunk_rest(seq__46124_46281__$1);\nvar G__46284 = c__5565__auto___46282;\nvar G__46285 = cljs.core.count(c__5565__auto___46282);\nvar G__46286 = (0);\nseq__46124_46271 = G__46283;\nchunk__46125_46272 = G__46284;\ncount__46126_46273 = G__46285;\ni__46127_46274 = G__46286;\ncontinue;\n} else {\nvar i_46287 = cljs.core.first(seq__46124_46281__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_46287);\n\n\nvar G__46288 = cljs.core.next(seq__46124_46281__$1);\nvar G__46289 = null;\nvar G__46290 = (0);\nvar G__46291 = (0);\nseq__46124_46271 = G__46288;\nchunk__46125_46272 = G__46289;\ncount__46126_46273 = G__46290;\ni__46127_46274 = G__46291;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__46132 = cljs.core.seq(extra_to_force);\nvar chunk__46133 = null;\nvar count__46134 = (0);\nvar i__46135 = (0);\nwhile(true){\nif((i__46135 < count__46134)){\nvar c = chunk__46133.cljs$core$IIndexed$_nth$arity$2(null,i__46135);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__46292 = seq__46132;\nvar G__46293 = chunk__46133;\nvar G__46294 = count__46134;\nvar G__46295 = (i__46135 + (1));\nseq__46132 = G__46292;\nchunk__46133 = G__46293;\ncount__46134 = G__46294;\ni__46135 = G__46295;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__46132);\nif(temp__5753__auto__){\nvar seq__46132__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46132__$1)){\nvar c__5565__auto__ = cljs.core.chunk_first(seq__46132__$1);\nvar G__46296 = cljs.core.chunk_rest(seq__46132__$1);\nvar G__46297 = c__5565__auto__;\nvar G__46298 = cljs.core.count(c__5565__auto__);\nvar G__46299 = (0);\nseq__46132 = G__46296;\nchunk__46133 = G__46297;\ncount__46134 = G__46298;\ni__46135 = G__46299;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__46132__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__46300 = cljs.core.next(seq__46132__$1);\nvar G__46301 = null;\nvar G__46302 = (0);\nvar G__46303 = (0);\nseq__46132 = G__46300;\nchunk__46133 = G__46301;\ncount__46134 = G__46302;\ni__46135 = G__46303;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__46143 = arguments.length;\nswitch (G__46143) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__46144){\nvar map__46145 = p__46144;\nvar map__46145__$1 = cljs.core.__destructure_map(map__46145);\nvar options = map__46145__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46145__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46145__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__5043__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__5043__auto__)){\nreturn or__5043__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e46146){var e = e46146;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,-258637753,null);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Q","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Q","~$com.fulcrologic.fulcro.algorithms.denormalize","^Y","~$cljs.core","^Z","~$goog","^[","^P","^P","^U","^U","^W","^W","^S","^S","~$fdn","^Y"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:form",["~#list",["~$ns","^I","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^16",["^12",["^U","~:as","^T"],["^Y","^18","^10"],["^W","^18","^V"],["^P","^18","^O"],["^Q","^18","^X"],["^S","^18","^R"]]]]],"~:flags",["^ ","^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1656688514039,"^J",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c) \"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__5041__auto__","map__46034","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__5043__auto__","com.fulcrologic.fulcro.components/get-computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","G__46035","G__46036","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","G__46037","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__46038","cljs.core/seq","chunk__46039","count__46040","i__46041","temp__5753__auto__","cljs.core/chunked-seq?","c__5565__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__46047","map__46048","map__46049","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__46050","chunk__46051","count__46052","i__46053","class","seq__46071","chunk__46073","count__46074","i__46075","seq__46082","chunk__46084","count__46085","i__46086","component","component-ident","com.fulcrologic.fulcro.components/get-ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__46095","map__46096","map__46097","prop","components","p1__46093#","p2__46094#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__46101","map__46102","map__46103","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__46104","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__46107","chunk__46109","count__46110","i__46111","seq__46116","chunk__46117","count__46118","i__46119","i","map__46122","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__46124","chunk__46125","count__46126","i__46127","seq__46132","chunk__46133","count__46134","i__46135","var_args","G__46143","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__46144","map__46145","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e46146","e","cljs.core/List"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$com.fulcrologic.fulcro.components/computed","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$cljs.core/concat","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/set","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$cljs.core/conj","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.components/ident->components","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/get-computed","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$cljs.core/not","~$cljs.core/cons","~$clojure.set/union","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1=","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.dom.HtmlElement"]]],["^1=","goog/async/freelist.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.core.async.impl.protocols"]]],["^1=","goog/i18n/datetimesymbols.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1=","expound/util.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@"]]],["^1=","goog/crypt/crypt.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.asserts"]]],["^1=","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1=","goog/timer/timer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1=","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S"]]],["^1=","cljs/spec/gen/alpha.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$goog.Uri"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.string","~$goog.string"]]],["^1=","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3<"]]],["^1=","goog/events/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1=","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.object","^2[","^2Z"]]],["^1=","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2Z"]]],["^1=","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S","^3;","^Q","^3?","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1=","expound/problems.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.paths","^@"]]],["^1=","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2[","~$goog.reflect","^2Z"]]],["^1=","goog/structs/prioritypool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1=","goog/events/eventlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.Event","~$goog.events.EventId"]]],["^1=","goog/async/run.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1=","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/async/workqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.FreeList","^30"]]],["^1=","goog/events/events.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^3=","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","^3P","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1=","goog/promise/resolver.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^37"]]],["^1=","goog/events/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3<","~$goog.string.StringBuffer"]]],["^1=","goog/structs/priorityqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Heap"]]],["^1=","goog/net/xhrio.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Timer","^36","^30","~$goog.collections.maps","^3U","^38","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^3?","^3<","~$goog.uri.utils","^3>","^3:","^3Y","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1=","goog/promise/thenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^37"]]],["^1=","goog/collections/iters.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/guardrails/utils.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.walk"]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","cljs/pprint.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^3<","^47"]]],["^1=","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^43","^44","^45","^42","^36","^3<","^47"]]],["^1=","expound/alpha.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.problems","^@","^3;","^P","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1=","taoensso/timbre.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^2P","node_modules/scheduler/cjs/scheduler.development.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","44159dfbe389867d6afda50df7f91996366d7206","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/net/wrapperxmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4B","^4C"]]],["^1=","goog/date/utcdatetime.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^2P","node_modules/scheduler/cjs/scheduler.production.min.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","e6921f21dd5fc2f4be8cf3c0d6b1b5c611fa4fcd","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/i18n/nativelocaledigits.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/eventtarget.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Disposable","^30","~$goog.events","^3O","^3W","^3X","^3?","^3P","^3Z","^40"]]],["^1=","com/fulcrologic/guardrails/core.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^3;","~$expound.alpha"]]],["^1=","goog/disposable/disposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1=","expound/ansi.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;"]]],["^1=","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^2P","node_modules/react/index.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["2bef3df4a6fc2ffb68559ae4e858e88390104e9f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","taoensso/encore.cljc"],["3c13701902dfed7dc5718fb3b45d8f2647459601","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^P","~$cljs.reader","~$cljs.tools.reader.edn","^3?","^36","^3<","~$goog.string.format","^47","^4Q","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^4>","^4=","~$taoensso.truss"]]],["^2P","node_modules/react-dom/cjs/react-dom.production.min.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","16d835d02619d41be201ba16f57c616d0503da6d","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$react$index","~$module$node_modules$scheduler$index"]]],["^1=","goog/structs/set.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1655454131000,1655454131000,1654064059000],["^2P","node_modules/react/cjs/react.development.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","1df918e8981877c2759388dfae58a059e089860d","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","taoensso/timbre/appenders/core.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^4J"]]],["^1=","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3L"]]],["^1=","goog/events/listener.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^40","^3W"]]],["^1=","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.fs.blob","^3@","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3B","^3C","^3D","^3E"]]],["^1=","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^34","^32"]]],["^1=","goog/events/listenermap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^41","^3?","^3P","^3W","^40"]]],["^1=","goog/events/eventid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$taoensso.truss.impl"]]],["^1=","com/fulcrologic/guardrails/registry.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/eventwrapper.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1=","edn_query_language/core.cljc"],["b84a23845b07ae3bcbbdef96e40bca48264c6561","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@"]]],["^1=","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^32","^3R"]]],["^1=","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","~$goog.html.SafeUrl","^3E","^30","^2Z"]]],["^1=","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5=","~$goog.html.SafeStyle","^5B","^3A","~$goog.html.uncheckedconversions","^3D","^2Z"]]],["^1=","expound/paths.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@","^4G"]]],["^1=","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P"]]],["^1=","clojure/walk.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/useragent/product.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3I","^3K","^3>"]]],["^1=","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/net/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/structs/map.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.collections.iters","^5:","~$goog.iter.StopIteration","~$goog.iter.es6"]]],["^1=","goog/net/xhriopool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^51","~$goog.structs.PriorityPool","^59"]]],["^1=","goog/date/date.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.i18n.DateTimeSymbols","^3<"]]],["^1=","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^3B","^3C","^5=","^5F","~$goog.html.SafeStyleSheet","^5B","~$goog.dom.TagName","^3A","^3E","^30","^3I","^36","^3?","^2Z","~$goog.dom.tags","^5>"]]],["^1=","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3?"]]],["^1=","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/raw/components.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^P","^3;","^4D","^Y","~$com.fulcrologic.fulcro.algorithms.do-not-use","~$com.fulcrologic.fulcro.algorithms.lookup","^Q","^4J","^S"]]],["^2P","node_modules/scheduler/index.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","408126fc2241739168bcaf5965ae56a7df143144","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1=","goog/structs/queue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36"]]],["^1=","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^2Z","^2["]]],["^1=","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/reader.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^46","^4[","^47"]]],["^1=","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^5N","~$goog.dom.safe","^5E","^5G","~$goog.math.Coordinate","~$goog.math.Size","^3?","^3<","^3D","~$goog.string.Unicode","^3>"]]],["^1=","com/fulcrologic/guardrails/impl/externs.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.registry","^4S"]]],["^1=","com/fulcrologic/fulcro/components.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^55","^Q","^@","^S","^4D","^3;","^5P","^Y","^5Q","~$com.fulcrologic.fulcro.raw.components","~$com.fulcrologic.guardrails.core","^P"]]],["^1=","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.debug.Error","^5U"]]],["^1=","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y"]]],["^1=","goog/i18n/timezone.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.date.DateLike","^3?","^3<"]]],["^1=","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","^4:","^3<","^57","^4A","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/net/errorcode.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/iter/es6.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.iter.Iterable","^5:","^5I"]]],["^1=","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/debug/errorhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4P","^30","~$goog.debug.EntryPointMonitor","^61"]]],["^1=","goog/disposable/idisposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/promise/promise.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^39","^30","^3T","~$goog.async.run","^3S","^61","~$goog.promise.Resolver"]]],["^1=","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^31","^34"]]],["^1=","cljs/spec/alpha.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^4D","~$cljs.spec.gen.alpha","^3;"]]],["^1=","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",[]]],["^1=","goog/json/hybrid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.json"]]],["^1=","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^3?"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^43","^3;","~$cljs.tools.reader.impl.inspect"]]],["^1=","goog/disposable/dispose.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","clojure/string.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3<","^47"]]],["^1=","goog/structs/pool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4P","~$goog.structs.Queue","~$goog.structs.Set"]]],["^2P","node_modules/react/cjs/react.production.min.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","f5f2e0db62a5ce44eafff60d4f3577b8796734e4","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/net/httpstatus.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/datetimeformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^4L","~$goog.date.UtcDateTime","^5L","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^3<","~$goog.i18n.DateTimeSymbolsType"]]],["^1=","goog/structs/heap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^3?","~$goog.structs.Node"]]],["^1=","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30"]]],["^1=","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5V","^5G","^3D","^2Z"]]],["^1=","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$module$node_modules$react_dom$index","^Y","^5Q","^W","^S"]]],["^1=","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.labs.userAgent","^2Z"]]],["^1=","expound/printer.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3;","^@","^D","^P","^4G","^4H","^3H","^4D","^50","^3<"]]],["^1=","goog/debug/debug.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","~$goog.debug.errorcontext"]]],["^1=","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.math"]]],["^1=","goog/debug/errorcontext.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^44","^3<","^47"]]],["^1=","goog/iter/iter.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^36","^30","~$goog.debug","^5D","^6G"]]],["^1=","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3U","~$goog.dom","^5N","^5D","^3I","^3J"]]],["^1=","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^5E","^5=","^5F","^5M","^5B","^3A","^3D","^2Z","^3B"]]],["^1=","goog/events/event.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4P","^3P"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^42","^43","^44"]]],["^1=","goog/events/eventhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4P","^4Q","^3?","^3O","^3P","^38","^3["]]],["^1=","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.math.Long","~$goog.math.Integer","^3<","^3?","^36","^3:","^47"]]],["^1=","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^3E","^5>","^30"]]],["^1=","goog/log/log.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^6H"]]],["^1=","goog/async/throwexception.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3D","^5F","^3E","^3?","^30","^2Z"]]],["^1=","goog/structs/collection.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/browserevent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^6H","^3O","~$goog.events.EventType","^3L","^3>"]]],["^1=","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3L"]]],["^1=","goog/structs/node.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3>"]]],["^2P","node_modules/react-dom/cjs/react-dom.development.js"],["df066d241a6c88d9f251ad255f77248626520d44","9451dcb5279a2e6ce223ed14bfec1a51587d069e","47cafc93ea89646f98180be561302225fa2b868d","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^2U","^55","^56"]]],["^1=","clojure/set.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3<"]]],["^1=","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3E"]]],["^1=","goog/disposable/disposeall.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4V"]]],["^1=","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]]],["^1=","goog/json/json.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/localefeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/listenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3P","^3Z","^40"]]],["^1=","goog/events/listenablekey.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3W"]]],["^1=","goog/net/xmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4B"]]],["^1=","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P","^Q","^S"]]],["^1=","goog/net/xmlhttp.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","~$goog.net.WrapperXmlHttpFactory","^4C","^4B"]]],["^1=","goog/net/xhrlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/crypt/base64.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^3F","^2Z","^3>","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/home/pushkar/.m2/repository/com/taoensso/encore/3.12.1/encore-3.12.1.jar!/taoensso/encore.cljc",1654064040000,"jar:file:/home/pushkar/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1653101298000,"jar:file:/home/pushkar/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1653101298000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/core.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/registry.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/data/json.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/reader.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map/base64_vlq.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre/appenders/core.cljc",1654064100000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/edn-query-language/eql/1.0.2/eql-1.0.2.jar!/edn_query_language/core.cljc",1656682131000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/util.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/utils.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map/base64.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/parser.clj",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/passes/and_or.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/components.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/env.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/printer.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/spec/gen/alpha.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre.cljc",1654064100000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/pprint.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/js_deps.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/ansi.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1653132171000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/spec/alpha.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/core.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/compiler.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/passes.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/util.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/problems.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1655451982000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/instant.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/impl.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/raw/components.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/alpha.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/config.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/externs.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/impl/namespaces.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1654064085000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/paths.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1654064085000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1653132171000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/tagged_literals.cljc",1654064059000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"^11",["^G",["^12"]],"~:shadow/js-access-global",["^G",["Error"]],"^13",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^16",["~$quote",["^16",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^H","^1[","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^16",[["^8[","^90","^91"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^G",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^8Y",["^16",["^8Z",["^16",[["^8[","^90","^91"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^8Y",["^16",["^8Z",["^16",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^H","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^92",["^16",[["^9;","^9<","~$c"]]],"^93",null,"^94",["^16",[null,null]],"^9",1,"^95",false,"^8",28,"^96",["^G",["~$js","~$clj-nil"]],"^:",28,"^98",3,"^99",true,"^8Y",["^16",["^8Z",["^16",[["^9;","^9<","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^8Y",["^16",["^8Z",["^16",[["^9;","^9<"]]]]],"^6","Renders *only* components that *have* the given ident."],"^H","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^92",["^16",[["^9;","^9<"]]],"^93",null,"^94",["^16",[null,null]],"^9",1,"^95",false,"^8",50,"^96","^9>","^:",50,"^98",2,"^99",true,"^8Y",["^16",["^8Z",["^16",[["^9;","^9<"]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^8Y",["^16",["^8Z",["^16",[["^9;","^9<"]]]]],"^6","Renders components that have, or query for, the given ident."],"^H","^2M","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^92",["^16",[["^9;","^9<"]]],"^93",null,"^94",["^16",[null,null]],"^9",1,"^95",false,"^8",56,"^96","^9>","^:",56,"^98",2,"^99",true,"^8Y",["^16",["^8Z",["^16",[["^9;","^9<"]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^8Y",["^16",["^8Z",["^16",[["^9;","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^H","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^92",["^16",[["^9;","^9B"]]],"^93",null,"^94",["^16",[null,null]],"^9",1,"^95",false,"^8",72,"^96",["^G",[null,"^97","^9>"]],"^:",72,"^98",2,"^99",true,"^8Y",["^16",["^8Z",["^16",[["^9;","^9B"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^8Y",["^16",["^8Z",["^16",[["^9;"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^H","^21","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^92",["^16",[["^9;"]]],"^93",null,"^94",["^16",[null,null]],"^9",1,"^95",false,"^8",90,"^96","^9>","^:",90,"^98",1,"^99",true,"^8Y",["^16",["^8Z",["^16",[["^9;"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^8X",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^8Y",["^16",["^8Z",["^16",[["^9;"],["^9;",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^18","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^95",false,"~:fixed-arity",2,"^98",2,"^92",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]],"^8Y",["^16",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]]],"^94",["^16",[null,null]]]],"^H","^2>","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^9I",["^ ","^95",false,"^9J",2,"^98",2,"^92",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]],"^8Y",["^16",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]]],"^94",["^16",[null,null]]],"^92",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]],"^93",null,"^9J",2,"^94",["^16",[null,null]],"^9",1,"^95",false,"~:methods",[["^ ","^9J",1,"^95",false,"~:tag","^97"],["^ ","^9J",2,"^95",false,"^9L",["^G",[null,"^97"]]]],"^8",132,"^:",132,"^98",2,"^99",true,"^8Y",["^16",[["^9;"],["^9;",["^ ","^9E",["^9F","^9G"],"^18","^9H"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^14",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^9S","^9Z","~:p","^:1","^:2","^9X","^9Y","^9N","^9Q","^9P","^9U","^9O","^9V","^9T","^:0","^9[","^9R","^9W"]],"^19",["^ ","^12",["^G",[]]],"^1:",["^ "],"^1;",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2O",[["^:6","~:static-fns"],true,["^:6","~:shadow-tweaks"],null,["^:6","~:source-map-inline"],null,["^:6","~:elide-asserts"],false,["^:6","~:optimize-constants"],null,["^:6","^1@"],null,["^:6","~:external-config"],null,["^:6","~:tooling-config"],null,["^:6","~:emit-constants"],null,["^:6","~:load-tests"],null,["^:6","~:form-size-threshold"],null,["^:6","~:global-goog-object&array"],null,["^:6","~:data-readers"],null,["^:6","~:infer-externs"],"^:1",["^:6","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:6","~:fn-invoke-direct"],null,["^:6","~:source-map"],"/dev/null"]]]