["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing');\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.algorithms !== 'undefined') && (typeof com.fulcrologic.fulcro.algorithms.tx_processing !== 'undefined') && (typeof com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing !== 'undefined') && (typeof com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\n\n/**\n * Returns true if the current thread is running non-nested transaction processing code.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.top_level_QMARK_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$top_level_QMARK_(p__50663){\nvar map__50664 = p__50663;\nvar map__50664__$1 = cljs.core.__destructure_map(map__50664);\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50664__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx),id,(0)),(0));\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$swap_submission_queue_BANG_(var_args){\nvar args__5772__auto__ = [];\nvar len__5766__auto___50765 = arguments.length;\nvar i__5767__auto___50766 = (0);\nwhile(true){\nif((i__5767__auto___50766 < len__5766__auto___50765)){\nargs__5772__auto__.push((arguments[i__5767__auto___50766]));\n\nvar G__50767 = (i__5767__auto___50766 + (1));\ni__5767__auto___50766 = G__50767;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5773__auto__ = ((((1) < args__5772__auto__.length))?(new cljs.core.IndexedSeq(args__5772__auto__.slice((1)),(0),null)):null);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5773__auto__);\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (app__$1,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.swap_BANG_,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"submission-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue\",-1259886916)], null)),args);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$lang$applyTo = (function (seq50665){\nvar G__50666 = cljs.core.first(seq50665);\nvar seq50665__$1 = cljs.core.next(seq50665);\nvar self__5751__auto__ = this;\nreturn self__5751__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50666,seq50665__$1);\n}));\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_submission_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$reset_submission_queue_BANG_(app__$1,v){\nreturn cljs.core.reset_BANG_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"submission-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue\",-1259886916)], null)),v);\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submission_queue = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$submission_queue(app__$1){\nreturn cljs.core.deref(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"submission-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue\",-1259886916)], null)));\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$swap_post_processing_steps_BANG_(var_args){\nvar args__5772__auto__ = [];\nvar len__5766__auto___50768 = arguments.length;\nvar i__5767__auto___50769 = (0);\nwhile(true){\nif((i__5767__auto___50769 < len__5766__auto___50768)){\nargs__5772__auto__.push((arguments[i__5767__auto___50769]));\n\nvar G__50770 = (i__5767__auto___50769 + (1));\ni__5767__auto___50769 = G__50770;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5773__auto__ = ((((1) < args__5772__auto__.length))?(new cljs.core.IndexedSeq(args__5772__auto__.slice((1)),(0),null)):null);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5773__auto__);\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (app__$1,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.swap_BANG_,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"post-processing-steps\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps\",1202501796)], null)),args);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_.cljs$lang$applyTo = (function (seq50667){\nvar G__50668 = cljs.core.first(seq50667);\nvar seq50667__$1 = cljs.core.next(seq50667);\nvar self__5751__auto__ = this;\nreturn self__5751__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50668,seq50667__$1);\n}));\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_post_processing_steps_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$reset_post_processing_steps_BANG_(app__$1,v){\nreturn cljs.core.reset_BANG_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"post-processing-steps\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps\",1202501796)], null)),v);\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.post_processing_steps = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$post_processing_steps(app__$1){\nreturn cljs.core.deref(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"post-processing-steps\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps\",1202501796)], null)));\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$swap_active_queue_BANG_(var_args){\nvar args__5772__auto__ = [];\nvar len__5766__auto___50771 = arguments.length;\nvar i__5767__auto___50772 = (0);\nwhile(true){\nif((i__5767__auto___50772 < len__5766__auto___50771)){\nargs__5772__auto__.push((arguments[i__5767__auto___50772]));\n\nvar G__50773 = (i__5767__auto___50772 + (1));\ni__5767__auto___50772 = G__50773;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5773__auto__ = ((((1) < args__5772__auto__.length))?(new cljs.core.IndexedSeq(args__5772__auto__.slice((1)),(0),null)):null);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5773__auto__);\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (app__$1,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.swap_BANG_,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue\",-1020610588)], null)),args);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$lang$applyTo = (function (seq50669){\nvar G__50670 = cljs.core.first(seq50669);\nvar seq50669__$1 = cljs.core.next(seq50669);\nvar self__5751__auto__ = this;\nreturn self__5751__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50670,seq50669__$1);\n}));\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_active_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$reset_active_queue_BANG_(app__$1,v){\nreturn cljs.core.reset_BANG_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue\",-1020610588)], null)),v);\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.active_queue = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$active_queue(app__$1){\nreturn cljs.core.deref(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue\",-1020610588)], null)));\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$swap_send_queue_BANG_(var_args){\nvar args__5772__auto__ = [];\nvar len__5766__auto___50774 = arguments.length;\nvar i__5767__auto___50775 = (0);\nwhile(true){\nif((i__5767__auto___50775 < len__5766__auto___50774)){\nargs__5772__auto__.push((arguments[i__5767__auto___50775]));\n\nvar G__50776 = (i__5767__auto___50775 + (1));\ni__5767__auto___50775 = G__50776;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5773__auto__ = ((((2) < args__5772__auto__.length))?(new cljs.core.IndexedSeq(args__5772__auto__.slice((2)),(0),null)):null);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5773__auto__);\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (app__$1,remote,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.swap_BANG_,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"send-queues\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queues\",-727474733),remote], null)),args);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$lang$applyTo = (function (seq50671){\nvar G__50672 = cljs.core.first(seq50671);\nvar seq50671__$1 = cljs.core.next(seq50671);\nvar G__50673 = cljs.core.first(seq50671__$1);\nvar seq50671__$2 = cljs.core.next(seq50671__$1);\nvar self__5751__auto__ = this;\nreturn self__5751__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50672,G__50673,seq50671__$2);\n}));\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_send_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$reset_send_queue_BANG_(app__$1,remote,v){\nreturn cljs.core.reset_BANG_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"send-queues\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queues\",-727474733),remote], null)),v);\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.send_queue = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$send_queue(app__$1,remote){\nreturn cljs.core.deref(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(app__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"send-queues\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queues\",-727474733),remote], null)));\n});\n/**\n * Add `f` as a function that will run after the current transaction has been fully processed.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_after_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$run_after_BANG_(app__$1,f){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),f], 0));\n});\n/**\n * Is there post processing to do?\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.post_processing_QMARK_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$post_processing_QMARK_(app__$1){\nreturn cljs.core.boolean$(cljs.core.seq(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.post_processing_steps(app__$1)));\n});\n/**\n * Runs the queued post processing steps until the post-processing queue is empty.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.do_post_processing_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$do_post_processing_BANG_(app__$1){\nvar steps = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.post_processing_steps(app__$1);\nwhile(true){\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_post_processing_steps_BANG_(app__$1,cljs.core.PersistentVector.EMPTY);\n\nvar seq__50674_50777 = cljs.core.seq(steps);\nvar chunk__50675_50778 = null;\nvar count__50676_50779 = (0);\nvar i__50677_50780 = (0);\nwhile(true){\nif((i__50677_50780 < count__50676_50779)){\nvar f_50781 = chunk__50675_50778.cljs$core$IIndexed$_nth$arity$2(null,i__50677_50780);\ntry{(f_50781.cljs$core$IFn$_invoke$arity$0 ? f_50781.cljs$core$IFn$_invoke$arity$0() : f_50781.call(null));\n}catch (e50680){var e_50782 = e50680;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,132,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (seq__50674_50777,chunk__50675_50778,count__50676_50779,i__50677_50780,steps,e_50782,f_50781){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e_50782,\"Post processing step failed. See https://book.fulcrologic.com/#err-stp-postproc-failed\"], null);\n});})(seq__50674_50777,chunk__50675_50778,count__50676_50779,i__50677_50780,steps,e_50782,f_50781))\n,null)),null,1243248094,null);\n}\n\nvar G__50783 = seq__50674_50777;\nvar G__50784 = chunk__50675_50778;\nvar G__50785 = count__50676_50779;\nvar G__50786 = (i__50677_50780 + (1));\nseq__50674_50777 = G__50783;\nchunk__50675_50778 = G__50784;\ncount__50676_50779 = G__50785;\ni__50677_50780 = G__50786;\ncontinue;\n} else {\nvar temp__5753__auto___50787 = cljs.core.seq(seq__50674_50777);\nif(temp__5753__auto___50787){\nvar seq__50674_50788__$1 = temp__5753__auto___50787;\nif(cljs.core.chunked_seq_QMARK_(seq__50674_50788__$1)){\nvar c__5565__auto___50789 = cljs.core.chunk_first(seq__50674_50788__$1);\nvar G__50790 = cljs.core.chunk_rest(seq__50674_50788__$1);\nvar G__50791 = c__5565__auto___50789;\nvar G__50792 = cljs.core.count(c__5565__auto___50789);\nvar G__50793 = (0);\nseq__50674_50777 = G__50790;\nchunk__50675_50778 = G__50791;\ncount__50676_50779 = G__50792;\ni__50677_50780 = G__50793;\ncontinue;\n} else {\nvar f_50794 = cljs.core.first(seq__50674_50788__$1);\ntry{(f_50794.cljs$core$IFn$_invoke$arity$0 ? f_50794.cljs$core$IFn$_invoke$arity$0() : f_50794.call(null));\n}catch (e50681){var e_50795 = e50681;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,132,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (seq__50674_50777,chunk__50675_50778,count__50676_50779,i__50677_50780,steps,e_50795,f_50794,seq__50674_50788__$1,temp__5753__auto___50787){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e_50795,\"Post processing step failed. See https://book.fulcrologic.com/#err-stp-postproc-failed\"], null);\n});})(seq__50674_50777,chunk__50675_50778,count__50676_50779,i__50677_50780,steps,e_50795,f_50794,seq__50674_50788__$1,temp__5753__auto___50787))\n,null)),null,-104847761,null);\n}\n\nvar G__50796 = cljs.core.next(seq__50674_50788__$1);\nvar G__50797 = null;\nvar G__50798 = (0);\nvar G__50799 = (0);\nseq__50674_50777 = G__50796;\nchunk__50675_50778 = G__50797;\ncount__50676_50779 = G__50798;\ni__50677_50780 = G__50799;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar temp__5753__auto__ = cljs.core.seq(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.post_processing_steps(app__$1));\nif(temp__5753__auto__){\nvar next_steps = temp__5753__auto__;\nvar G__50800 = next_steps;\nsteps = G__50800;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Returns true if the current thread is in the midst of running the optimistic actions of a new transaction.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.in_transaction_QMARK_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$in_transaction_QMARK_(p__50682){\nvar map__50683 = p__50682;\nvar map__50683__$1 = cljs.core.__destructure_map(map__50683);\nvar app__$1 = map__50683__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50683__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625));\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx),id,(0)));\n});\n/**\n * Should be called after the application renders to ensure that transactions blocked until the next render become\n * unblocked. Schedules an activation.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.release_post_render_tasks_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$release_post_render_tasks_BANG_(app__$1){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (queue){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (node){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(node,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),cljs.core.dissoc,new cljs.core.Keyword(null,\"after-render?\",\"after-render?\",595994030));\n}),queue);\n})], 0));\n});\n/**\n * Figure out the dispatch routine to trigger for the given network result.  If it exists, send the result\n *   to it.\n * \n *   Returns the tx-element with the remote marked complete.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.dispatch_result_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$dispatch_result_BANG_(app__$1,tx_node,p__50684,remote){\nvar map__50685 = p__50684;\nvar map__50685__$1 = cljs.core.__destructure_map(map__50685);\nvar tx_element = map__50685__$1;\nvar results = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50685__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"results\",\"com.fulcrologic.fulcro.algorithms.tx-processing/results\",-1876101852));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50685__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"dispatch\",\"com.fulcrologic.fulcro.algorithms.tx-processing/dispatch\",-262239660));\nvar desired_ast_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50685__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"desired-ast-nodes\",\"com.fulcrologic.fulcro.algorithms.tx-processing/desired-ast-nodes\",-1718643425));\nvar transmitted_ast_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50685__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"transmitted-ast-nodes\",\"com.fulcrologic.fulcro.algorithms.tx-processing/transmitted-ast-nodes\",1065250687));\nvar original_ast_node = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50685__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"original-ast-node\",\"com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node\",2080944477));\nvar result_50801 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(results,remote);\nvar handler_50802 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(dispatch,new cljs.core.Keyword(null,\"result-action\",\"result-action\",-1254630246));\nif(cljs.core.truth_(handler_50802)){\nvar env_50803 = com.fulcrologic.fulcro.algorithms.tx_processing.build_env.cljs$core$IFn$_invoke$arity$3(app__$1,tx_node,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),dispatch,new cljs.core.Keyword(null,\"transacted-ast\",\"transacted-ast\",-442737948),original_ast_node,new cljs.core.Keyword(null,\"mutation-ast\",\"mutation-ast\",1077959891),cljs.core.get.cljs$core$IFn$_invoke$arity$2(desired_ast_nodes,remote),new cljs.core.Keyword(null,\"transmitted-ast\",\"transmitted-ast\",1828931690),cljs.core.get.cljs$core$IFn$_invoke$arity$2(transmitted_ast_nodes,remote),new cljs.core.Keyword(null,\"result\",\"result\",1415092211),result_50801], null));\ntry{(handler_50802.cljs$core$IFn$_invoke$arity$1 ? handler_50802.cljs$core$IFn$_invoke$arity$1(env_50803) : handler_50802.call(null,env_50803));\n}catch (e50686){var e_50804 = e50686;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,164,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e_50804,\"The result-action mutation handler for mutation\",new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510).cljs$core$IFn$_invoke$arity$1(original_ast_node),\"threw an exception. See https://book.fulcrologic.com/#err-stp-res-action-exc\"], null);\n}),null)),null,522398038,null);\n}} else {\n}\n\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(tx_element,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"complete?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/complete?\",-311612706),cljs.core.conj,remote);\n});\n/**\n * Distribute results and mark the remotes for those elements as complete.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.distribute_element_results_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$distribute_element_results_BANG_(app__$1,tx_node,p__50687){\nvar map__50688 = p__50687;\nvar map__50688__$1 = cljs.core.__destructure_map(map__50688);\nvar tx_element = map__50688__$1;\nvar results = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50688__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"results\",\"com.fulcrologic.fulcro.algorithms.tx-processing/results\",-1876101852));\nvar complete_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50688__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"complete?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/complete?\",-311612706));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (new_element,remote){\nif(cljs.core.truth_((complete_QMARK_.cljs$core$IFn$_invoke$arity$1 ? complete_QMARK_.cljs$core$IFn$_invoke$arity$1(remote) : complete_QMARK_.call(null,remote)))){\nreturn new_element;\n} else {\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.dispatch_result_BANG_(app__$1,tx_node,new_element,remote);\n}\n}),tx_element,cljs.core.keys(results));\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.node_index = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$node_index(queue,txn_id){\nvar n = cljs.core.count(queue);\nvar idx = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (idx,p__50689){\nvar map__50690 = p__50689;\nvar map__50690__$1 = cljs.core.__destructure_map(map__50690);\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50690__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(id,txn_id)){\nreturn cljs.core.reduced(idx);\n} else {\nreturn (idx + (1));\n}\n}),(0),queue);\nif((idx < n)){\nreturn idx;\n} else {\nreturn null;\n}\n});\n/**\n * Side-effects against the app state to distribute the result for txn-id element at ele-idx. This will call the result\n * handler and mark that remote as complete.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.distribute_results_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$distribute_results_BANG_(app__$1,txn_id,ele_idx){\nvar active_queue = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.active_queue(app__$1);\nvar idx = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.node_index(active_queue,txn_id);\nvar tx_node = cljs.core.get.cljs$core$IFn$_invoke$arity$2(active_queue,idx);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),ele_idx], null),(function (p1__50691_SHARP_){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.distribute_element_results_BANG_(app__$1,tx_node,p1__50691_SHARP_);\n})], 0));\n});\n/**\n * Deal with a network result on the given txn/element.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$record_result_BANG_(var_args){\nvar G__50693 = arguments.length;\nswitch (G__50693) {\ncase 6:\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase 5:\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$6 = (function (app__$1,txn_id,ele_idx,remote,result,result_key){\nvar active_queue = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.active_queue(app__$1);\nvar txn_idx = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.node_index(active_queue,txn_id);\nvar not_found_QMARK_ = (((txn_idx >= cljs.core.count(active_queue))) || (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(txn_id,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423).cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(active_queue,txn_idx)))));\nif(not_found_QMARK_){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,207,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Network result for\",remote,\"does not have a valid node on the active queue! See https://book.fulcrologic.com/#err-stp-res-lacks-valid-node\"], null);\n}),null)),null,-2018796560,null);\n} else {\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [txn_idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),ele_idx,result_key,remote], null),result], 0));\n\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.distribute_results_BANG_(app__$1,txn_id,ele_idx);\n}\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$5 = (function (app__$1,txn_id,ele_idx,remote,result){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$6(app__$1,txn_id,ele_idx,remote,result,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"results\",\"com.fulcrologic.fulcro.algorithms.tx-processing/results\",-1876101852));\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$lang$maxFixedArity = 6);\n\n/**\n * Removes the send node (if present) from the send queue on the given remote.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.remove_send_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$remove_send_BANG_(app__$1,remote,txn_id,ele_idx){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,remote,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (old_queue){\nreturn cljs.core.filterv((function (p__50694){\nvar map__50695 = p__50694;\nvar map__50695__$1 = cljs.core.__destructure_map(map__50695);\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50695__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423));\nvar idx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50695__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"idx\",\"com.fulcrologic.fulcro.algorithms.tx-processing/idx\",-1121773698));\nreturn (!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(txn_id,id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ele_idx,idx)))));\n}),old_queue);\n})], 0));\n});\n/**\n * Generate a new send node and add it to the appropriate send queue.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.add_send_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$add_send_BANG_(app__$1,p__50696,ele_idx,remote){\nvar map__50697 = p__50696;\nvar map__50697__$1 = cljs.core.__destructure_map(map__50697);\nvar tx_node = map__50697__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50697__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423));\nvar options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50697__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420));\nvar update_handler = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$add_send_BANG__$_progress_handler_STAR_(result){\nvar id__50464__auto__ = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625).cljs$core$IFn$_invoke$arity$1(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto__,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,(0)));\n\ntry{com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$6(app__$1,id,ele_idx,remote,result,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"progress\",\"com.fulcrologic.fulcro.algorithms.tx-processing/progress\",1012736442));\n\nvar G__50698 = app__$1;\nvar G__50699 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.cljs$core$IFn$_invoke$arity$2(G__50698,G__50699) : com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.call(null,G__50698,G__50699));\n}finally {cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto__,cljs.core.dec);\n}});\nvar ast = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(tx_node,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),ele_idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"transmitted-ast-nodes\",\"com.fulcrologic.fulcro.algorithms.tx-processing/transmitted-ast-nodes\",1065250687),remote], null));\nvar handler = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$add_send_BANG__$_result_handler_STAR_(result){\nvar id__50464__auto__ = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625).cljs$core$IFn$_invoke$arity$1(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto__,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,(0)));\n\ntry{com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_.cljs$core$IFn$_invoke$arity$5(app__$1,id,ele_idx,remote,result);\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.remove_send_BANG_(app__$1,remote,id,ele_idx);\n\nvar G__50700 = app__$1;\nvar G__50701 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.cljs$core$IFn$_invoke$arity$2(G__50700,G__50701) : com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_.call(null,G__50700,G__50701));\n}finally {cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto__,cljs.core.dec);\n}});\nvar send_node = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423),id,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"idx\",\"com.fulcrologic.fulcro.algorithms.tx-processing/idx\",-1121773698),ele_idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"ast\",\"com.fulcrologic.fulcro.algorithms.tx-processing/ast\",1718830373),ast,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),options,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"active?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/active?\",966679517),false,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"result-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\",-114902209),handler,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"update-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\",-1256285755),update_handler], null);\nif(cljs.core.truth_(ast)){\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,remote,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),send_node], 0));\n} else {\ncom.fulcrologic.fulcro.algorithms.scheduling.defer((function (){\nreturn handler(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status-code\",\"status-code\",-1060410130),(200),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentArrayMap.EMPTY], null));\n}),(1));\n}\n\nreturn null;\n});\n/**\n * Queue all (unqueued) remote actions for the given element.  Returns the (possibly updated) node.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.queue_element_sends_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$queue_element_sends_BANG_(app__$1,tx_node,p__50702){\nvar map__50703 = p__50702;\nvar map__50703__$1 = cljs.core.__destructure_map(map__50703);\nvar idx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50703__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"idx\",\"com.fulcrologic.fulcro.algorithms.tx-processing/idx\",-1121773698));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50703__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"dispatch\",\"com.fulcrologic.fulcro.algorithms.tx-processing/dispatch\",-262239660));\nvar started_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50703__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"started?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/started?\",1421241366));\nvar remotes = clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(dispatch)),com.fulcrologic.fulcro.algorithms.tx_processing.app__GT_remote_names(app__$1));\nvar to_dispatch = clojure.set.difference.cljs$core$IFn$_invoke$arity$2(remotes,started_QMARK_);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (node,remote){\nif(cljs.core.contains_QMARK_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(node,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"started?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/started?\",1421241366)], null),cljs.core.PersistentHashSet.EMPTY),remote)){\nreturn node;\n} else {\nvar updated_node = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(node,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),idx], null),(function (tx_element){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.compute_desired_ast_node(app__$1,remote,node,tx_element);\n})),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330),idx,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"started?\",\"com.fulcrologic.fulcro.algorithms.tx-processing/started?\",1421241366)], null),cljs.core.conj,remote);\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.add_send_BANG_(app__$1,updated_node,idx,remote);\n\nreturn updated_node;\n}\n}),tx_node,to_dispatch);\n});\n/**\n * Finds any item(s) on the given node that are ready to be placed on the network queues and adds them. Non-optimistic\n *   multi-element nodes will only queue one remote operation at a time.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.queue_sends_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$queue_sends_BANG_(app__$1,p__50704){\nvar map__50705 = p__50704;\nvar map__50705__$1 = cljs.core.__destructure_map(map__50705);\nvar tx_node = map__50705__$1;\nvar options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50705__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420));\nvar elements = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50705__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"elements\",\"com.fulcrologic.fulcro.algorithms.tx-processing/elements\",-925101330));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (node,element){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.queue_element_sends_BANG_(app__$1,node,element);\n}),tx_node,elements);\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_tx_node_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$process_tx_node_BANG_(app__$1,p__50706){\nvar map__50707 = p__50706;\nvar map__50707__$1 = cljs.core.__destructure_map(map__50707);\nvar tx_node = map__50707__$1;\nvar options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50707__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420));\nif(com.fulcrologic.fulcro.algorithms.tx_processing.fully_complete_QMARK_(app__$1,tx_node)){\nreturn null;\n} else {\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.update_progress_BANG_(app__$1,com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.queue_sends_BANG_(app__$1,com.fulcrologic.fulcro.algorithms.tx_processing.run_actions_BANG_(app__$1,tx_node)));\n}\n});\n/**\n * Process the send queues against the remotes, which will cause idle remotes with queued work to issue network requests.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_send_queues_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$process_send_queues_BANG_(app__$1){\nvar remote_names = com.fulcrologic.fulcro.algorithms.tx_processing.app__GT_remote_names(app__$1);\nvar operations = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar seq__50708_50806 = cljs.core.seq(remote_names);\nvar chunk__50709_50807 = null;\nvar count__50710_50808 = (0);\nvar i__50711_50809 = (0);\nwhile(true){\nif((i__50711_50809 < count__50710_50808)){\nvar remote_50810 = chunk__50709_50807.cljs$core$IIndexed$_nth$arity$2(null,i__50711_50809);\nvar send_queue_50811 = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.send_queue(app__$1,remote_50810);\nvar vec__50728_50812 = com.fulcrologic.fulcro.algorithms.tx_processing.extract_parallel(send_queue_50811);\nvar p_50813 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50728_50812,(0),null);\nvar serial_50814 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50728_50812,(1),null);\nvar front_50815 = cljs.core.first(serial_50814);\nvar seq__50731_50816 = cljs.core.seq(p_50813);\nvar chunk__50732_50817 = null;\nvar count__50733_50818 = (0);\nvar i__50734_50819 = (0);\nwhile(true){\nif((i__50734_50819 < count__50733_50818)){\nvar item_50820 = chunk__50732_50817.cljs$core$IIndexed$_nth$arity$2(null,i__50734_50819);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50731_50816,chunk__50732_50817,count__50733_50818,i__50734_50819,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50820,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,item_50820,remote_50810);\n});})(seq__50731_50816,chunk__50732_50817,count__50733_50818,i__50734_50819,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50820,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations))\n);\n\n\nvar G__50821 = seq__50731_50816;\nvar G__50822 = chunk__50732_50817;\nvar G__50823 = count__50733_50818;\nvar G__50824 = (i__50734_50819 + (1));\nseq__50731_50816 = G__50821;\nchunk__50732_50817 = G__50822;\ncount__50733_50818 = G__50823;\ni__50734_50819 = G__50824;\ncontinue;\n} else {\nvar temp__5753__auto___50825 = cljs.core.seq(seq__50731_50816);\nif(temp__5753__auto___50825){\nvar seq__50731_50826__$1 = temp__5753__auto___50825;\nif(cljs.core.chunked_seq_QMARK_(seq__50731_50826__$1)){\nvar c__5565__auto___50827 = cljs.core.chunk_first(seq__50731_50826__$1);\nvar G__50828 = cljs.core.chunk_rest(seq__50731_50826__$1);\nvar G__50829 = c__5565__auto___50827;\nvar G__50830 = cljs.core.count(c__5565__auto___50827);\nvar G__50831 = (0);\nseq__50731_50816 = G__50828;\nchunk__50732_50817 = G__50829;\ncount__50733_50818 = G__50830;\ni__50734_50819 = G__50831;\ncontinue;\n} else {\nvar item_50832 = cljs.core.first(seq__50731_50826__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50731_50816,chunk__50732_50817,count__50733_50818,i__50734_50819,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50832,seq__50731_50826__$1,temp__5753__auto___50825,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,item_50832,remote_50810);\n});})(seq__50731_50816,chunk__50732_50817,count__50733_50818,i__50734_50819,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50832,seq__50731_50826__$1,temp__5753__auto___50825,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations))\n);\n\n\nvar G__50833 = cljs.core.next(seq__50731_50826__$1);\nvar G__50834 = null;\nvar G__50835 = (0);\nvar G__50836 = (0);\nseq__50731_50816 = G__50833;\nchunk__50732_50817 = G__50834;\ncount__50733_50818 = G__50835;\ni__50734_50819 = G__50836;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active?\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active?\",-132674601).cljs$core$IFn$_invoke$arity$1(front_50815))){\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_send_queue_BANG_(app__$1,remote_50810,serial_50814);\n} else {\nvar map__50735_50837 = com.fulcrologic.fulcro.algorithms.tx_processing.combine_sends(app__$1,remote_50810,serial_50814);\nvar map__50735_50838__$1 = cljs.core.__destructure_map(map__50735_50837);\nvar send_queue_50839__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50735_50838__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"send-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing/send-queue\",-1602123421));\nvar send_node_50840 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50735_50838__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"send-node\",\"com.fulcrologic.fulcro.algorithms.tx-processing/send-node\",1624648157));\nif(cljs.core.truth_(send_node_50840)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,map__50735_50837,map__50735_50838__$1,send_queue_50839__$1,send_node_50840,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,send_node_50840,remote_50810);\n});})(seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,map__50735_50837,map__50735_50838__$1,send_queue_50839__$1,send_node_50840,send_queue_50811,vec__50728_50812,p_50813,serial_50814,front_50815,remote_50810,remote_names,operations))\n);\n} else {\n}\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_send_queue_BANG_(app__$1,remote_50810,send_queue_50839__$1);\n}\n\n\nvar G__50841 = seq__50708_50806;\nvar G__50842 = chunk__50709_50807;\nvar G__50843 = count__50710_50808;\nvar G__50844 = (i__50711_50809 + (1));\nseq__50708_50806 = G__50841;\nchunk__50709_50807 = G__50842;\ncount__50710_50808 = G__50843;\ni__50711_50809 = G__50844;\ncontinue;\n} else {\nvar temp__5753__auto___50845 = cljs.core.seq(seq__50708_50806);\nif(temp__5753__auto___50845){\nvar seq__50708_50846__$1 = temp__5753__auto___50845;\nif(cljs.core.chunked_seq_QMARK_(seq__50708_50846__$1)){\nvar c__5565__auto___50847 = cljs.core.chunk_first(seq__50708_50846__$1);\nvar G__50848 = cljs.core.chunk_rest(seq__50708_50846__$1);\nvar G__50849 = c__5565__auto___50847;\nvar G__50850 = cljs.core.count(c__5565__auto___50847);\nvar G__50851 = (0);\nseq__50708_50806 = G__50848;\nchunk__50709_50807 = G__50849;\ncount__50710_50808 = G__50850;\ni__50711_50809 = G__50851;\ncontinue;\n} else {\nvar remote_50852 = cljs.core.first(seq__50708_50846__$1);\nvar send_queue_50853 = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.send_queue(app__$1,remote_50852);\nvar vec__50736_50854 = com.fulcrologic.fulcro.algorithms.tx_processing.extract_parallel(send_queue_50853);\nvar p_50855 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50736_50854,(0),null);\nvar serial_50856 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50736_50854,(1),null);\nvar front_50857 = cljs.core.first(serial_50856);\nvar seq__50739_50858 = cljs.core.seq(p_50855);\nvar chunk__50740_50859 = null;\nvar count__50741_50860 = (0);\nvar i__50742_50861 = (0);\nwhile(true){\nif((i__50742_50861 < count__50741_50860)){\nvar item_50862 = chunk__50740_50859.cljs$core$IIndexed$_nth$arity$2(null,i__50742_50861);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50739_50858,chunk__50740_50859,count__50741_50860,i__50742_50861,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50862,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,item_50862,remote_50852);\n});})(seq__50739_50858,chunk__50740_50859,count__50741_50860,i__50742_50861,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50862,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations))\n);\n\n\nvar G__50863 = seq__50739_50858;\nvar G__50864 = chunk__50740_50859;\nvar G__50865 = count__50741_50860;\nvar G__50866 = (i__50742_50861 + (1));\nseq__50739_50858 = G__50863;\nchunk__50740_50859 = G__50864;\ncount__50741_50860 = G__50865;\ni__50742_50861 = G__50866;\ncontinue;\n} else {\nvar temp__5753__auto___50867__$1 = cljs.core.seq(seq__50739_50858);\nif(temp__5753__auto___50867__$1){\nvar seq__50739_50868__$1 = temp__5753__auto___50867__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__50739_50868__$1)){\nvar c__5565__auto___50869 = cljs.core.chunk_first(seq__50739_50868__$1);\nvar G__50870 = cljs.core.chunk_rest(seq__50739_50868__$1);\nvar G__50871 = c__5565__auto___50869;\nvar G__50872 = cljs.core.count(c__5565__auto___50869);\nvar G__50873 = (0);\nseq__50739_50858 = G__50870;\nchunk__50740_50859 = G__50871;\ncount__50741_50860 = G__50872;\ni__50742_50861 = G__50873;\ncontinue;\n} else {\nvar item_50874 = cljs.core.first(seq__50739_50868__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50739_50858,chunk__50740_50859,count__50741_50860,i__50742_50861,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50874,seq__50739_50868__$1,temp__5753__auto___50867__$1,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,item_50874,remote_50852);\n});})(seq__50739_50858,chunk__50740_50859,count__50741_50860,i__50742_50861,seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,item_50874,seq__50739_50868__$1,temp__5753__auto___50867__$1,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations))\n);\n\n\nvar G__50875 = cljs.core.next(seq__50739_50868__$1);\nvar G__50876 = null;\nvar G__50877 = (0);\nvar G__50878 = (0);\nseq__50739_50858 = G__50875;\nchunk__50740_50859 = G__50876;\ncount__50741_50860 = G__50877;\ni__50742_50861 = G__50878;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active?\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active?\",-132674601).cljs$core$IFn$_invoke$arity$1(front_50857))){\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_send_queue_BANG_(app__$1,remote_50852,serial_50856);\n} else {\nvar map__50743_50879 = com.fulcrologic.fulcro.algorithms.tx_processing.combine_sends(app__$1,remote_50852,serial_50856);\nvar map__50743_50880__$1 = cljs.core.__destructure_map(map__50743_50879);\nvar send_queue_50881__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50743_50880__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"send-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing/send-queue\",-1602123421));\nvar send_node_50882 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50743_50880__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"send-node\",\"com.fulcrologic.fulcro.algorithms.tx-processing/send-node\",1624648157));\nif(cljs.core.truth_(send_node_50882)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(operations,cljs.core.conj,((function (seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,map__50743_50879,map__50743_50880__$1,send_queue_50881__$1,send_node_50882,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations){\nreturn (function (){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.net_send_BANG_(app__$1,send_node_50882,remote_50852);\n});})(seq__50708_50806,chunk__50709_50807,count__50710_50808,i__50711_50809,map__50743_50879,map__50743_50880__$1,send_queue_50881__$1,send_node_50882,send_queue_50853,vec__50736_50854,p_50855,serial_50856,front_50857,remote_50852,seq__50708_50846__$1,temp__5753__auto___50845,remote_names,operations))\n);\n} else {\n}\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_send_queue_BANG_(app__$1,remote_50852,send_queue_50881__$1);\n}\n\n\nvar G__50883 = cljs.core.next(seq__50708_50846__$1);\nvar G__50884 = null;\nvar G__50885 = (0);\nvar G__50886 = (0);\nseq__50708_50806 = G__50883;\nchunk__50709_50807 = G__50884;\ncount__50710_50808 = G__50885;\ni__50711_50809 = G__50886;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__50744 = cljs.core.seq(cljs.core.deref(operations));\nvar chunk__50745 = null;\nvar count__50746 = (0);\nvar i__50747 = (0);\nwhile(true){\nif((i__50747 < count__50746)){\nvar op = chunk__50745.cljs$core$IIndexed$_nth$arity$2(null,i__50747);\n(op.cljs$core$IFn$_invoke$arity$0 ? op.cljs$core$IFn$_invoke$arity$0() : op.call(null));\n\n\nvar G__50887 = seq__50744;\nvar G__50888 = chunk__50745;\nvar G__50889 = count__50746;\nvar G__50890 = (i__50747 + (1));\nseq__50744 = G__50887;\nchunk__50745 = G__50888;\ncount__50746 = G__50889;\ni__50747 = G__50890;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__50744);\nif(temp__5753__auto__){\nvar seq__50744__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__50744__$1)){\nvar c__5565__auto__ = cljs.core.chunk_first(seq__50744__$1);\nvar G__50891 = cljs.core.chunk_rest(seq__50744__$1);\nvar G__50892 = c__5565__auto__;\nvar G__50893 = cljs.core.count(c__5565__auto__);\nvar G__50894 = (0);\nseq__50744 = G__50891;\nchunk__50745 = G__50892;\ncount__50746 = G__50893;\ni__50747 = G__50894;\ncontinue;\n} else {\nvar op = cljs.core.first(seq__50744__$1);\n(op.cljs$core$IFn$_invoke$arity$0 ? op.cljs$core$IFn$_invoke$arity$0() : op.call(null));\n\n\nvar G__50895 = cljs.core.next(seq__50744__$1);\nvar G__50896 = null;\nvar G__50897 = (0);\nvar G__50898 = (0);\nseq__50744 = G__50895;\nchunk__50745 = G__50896;\ncount__50746 = G__50897;\ni__50747 = G__50898;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Run through the active queue and do a processing step.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$process_queue_BANG_(p__50748){\nvar map__50749 = p__50748;\nvar map__50749__$1 = cljs.core.__destructure_map(map__50749);\nvar app__$1 = map__50749__$1;\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50749__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50749__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar old_queue = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.active_queue(app__$1);\nvar new_queue = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$process_queue_BANG__$__STAR_pstep(new_queue,n){\nvar temp__5751__auto__ = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_tx_node_BANG_(app__$1,n);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar new_node = temp__5751__auto__;\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_queue,new_node);\n} else {\nreturn new_queue;\n}\n}),cljs.core.PersistentVector.EMPTY,old_queue);\nvar accumulate = (function (r,items){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.set(r),items);\n});\nvar remotes = com.fulcrologic.fulcro.algorithms.tx_processing.app__GT_remote_names(app__$1);\nvar explicit_refresh = com.fulcrologic.fulcro.algorithms.tx_processing.requested_refreshes(app__$1,new_queue);\nvar remotes_active_QMARK_ = com.fulcrologic.fulcro.algorithms.tx_processing.active_remotes(new_queue,remotes);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_queue,com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.active_queue(app__$1))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,323,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Old queue changed! See https://book.fulcrologic.com/#err-stp-old-queue-chng\"], null);\n}),null)),null,1659958488,null);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_atom,cljs.core.assoc,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"active-remotes\",\"com.fulcrologic.fulcro.application/active-remotes\",873903005),remotes_active_QMARK_);\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_active_queue_BANG_(app__$1,new_queue);\n\nif(cljs.core.seq(explicit_refresh)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(runtime_atom,cljs.core.update,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829),accumulate,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([explicit_refresh], 0));\n} else {\n}\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_send_queues_BANG_(app__$1);\n\nreturn null;\n});\n/**\n * Returns true if the submission queue has work on it that can proceed without any restrictions.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.available_work_QMARK_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$available_work_QMARK_(app__$1){\nvar map__50750 = cljs.core.group_by(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.boolean$,new cljs.core.Keyword(null,\"after-render?\",\"after-render?\",595994030),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420)),com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submission_queue(app__$1));\nvar map__50750__$1 = cljs.core.__destructure_map(map__50750);\nvar ready = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50750__$1,false);\nreturn cljs.core.boolean$(cljs.core.seq(ready));\n});\n/**\n * Activate all of the transactions that have been submitted since the last activation. After the items are activated\n *   a single processing step will run for the active queue.\n * \n *   Activation can be blocked by the tx-node options for things like waiting for the next render frame.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.activate_submissions_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$activate_submissions_BANG_(app__$1){\nvar map__50752 = cljs.core.group_by(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.boolean$,new cljs.core.Keyword(null,\"after-render?\",\"after-render?\",595994030),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420)),com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submission_queue(app__$1));\nvar map__50752__$1 = cljs.core.__destructure_map(map__50752);\nvar blocked = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50752__$1,true);\nvar ready = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50752__$1,false);\nvar _ = com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.reset_submission_queue_BANG_(app__$1,cljs.core.vec(blocked));\nvar dispatched_nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__50751_SHARP_){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.dispatch_elements(p1__50751_SHARP_,com.fulcrologic.fulcro.algorithms.tx_processing.build_env.cljs$core$IFn$_invoke$arity$2(app__$1,p1__50751_SHARP_),com.fulcrologic.fulcro.mutations.mutate);\n}),ready);\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),dispatched_nodes], 0));\n\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.process_queue_BANG_(app__$1);\n});\n/**\n * Runs the submission queue. If the submission queue's optimistic actions submit more to the submission queue, then those\n * are processed as well until the submission queue remains empty. This can start network requests.\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_all_immediate_work_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$run_all_immediate_work_BANG_(app__$1){\ntry{return com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.activate_submissions_BANG_(app__$1);\n}catch (e50753){var e = e50753;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",null,356,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Error processing tx queue! See https://book.fulcrologic.com/#err-stp-err-processing-tx-q\"], null);\n}),null)),null,1680010563,null);\n}});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$run_queue_BANG_(app__$1,p__50754){\nwhile(true){\nvar map__50755 = p__50754;\nvar map__50755__$1 = cljs.core.__destructure_map(map__50755);\nvar options = map__50755__$1;\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50755__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nvar synchronous_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50755__$1,new cljs.core.Keyword(null,\"synchronous?\",\"synchronous?\",1705588391));\nwhile(true){\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_all_immediate_work_BANG_(app__$1);\n\nif(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.available_work_QMARK_(app__$1)){\ncontinue;\n} else {\n}\nbreak;\n}\n\nif(cljs.core.truth_((function (){var and__5041__auto__ = synchronous_QMARK_;\nif(cljs.core.truth_(and__5041__auto__)){\nreturn component;\n} else {\nreturn and__5041__auto__;\n}\n})())){\nvar temp__5753__auto___50899 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"refresh-component!\",\"refresh-component!\",-872161039));\nif(cljs.core.truth_(temp__5753__auto___50899)){\nvar refresh_component_BANG__50900 = temp__5753__auto___50899;\n(refresh_component_BANG__50900.cljs$core$IFn$_invoke$arity$1 ? refresh_component_BANG__50900.cljs$core$IFn$_invoke$arity$1(component) : refresh_component_BANG__50900.call(null,component));\n} else {\n}\n} else {\nvar temp__5753__auto___50901 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"render!\",\"render!\",-1848688504));\nif(cljs.core.truth_(temp__5753__auto___50901)){\nvar render_BANG__50902 = temp__5753__auto___50901;\n(render_BANG__50902.cljs$core$IFn$_invoke$arity$2 ? render_BANG__50902.cljs$core$IFn$_invoke$arity$2(app__$1,options) : render_BANG__50902.call(null,app__$1,options));\n} else {\n}\n}\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.release_post_render_tasks_BANG_(app__$1);\n\nif(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.available_work_QMARK_(app__$1)){\nvar G__50903 = app__$1;\nvar G__50904 = cljs.core.PersistentArrayMap.EMPTY;\napp__$1 = G__50903;\np__50754 = G__50904;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.sync_tx_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$sync_tx_BANG_(var_args){\nvar args__5772__auto__ = [];\nvar len__5766__auto___50905 = arguments.length;\nvar i__5767__auto___50906 = (0);\nwhile(true){\nif((i__5767__auto___50906 < len__5766__auto___50905)){\nargs__5772__auto__.push((arguments[i__5767__auto___50906]));\n\nvar G__50907 = (i__5767__auto___50906 + (1));\ni__5767__auto___50906 = G__50907;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5773__auto__ = ((((0) < args__5772__auto__.length))?(new cljs.core.IndexedSeq(args__5772__auto__.slice((0)),(0),null)):null);\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.sync_tx_BANG_.cljs$core$IFn$_invoke$arity$variadic(argseq__5773__auto__);\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.sync_tx_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"BREAKING CHANGE. Please use `with-synchronous-transaction` to add sync transaction support to your Fulcro app\",cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.sync_tx_BANG_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.sync_tx_BANG_.cljs$lang$applyTo = (function (seq50756){\nvar self__5752__auto__ = this;\nreturn self__5752__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq50756));\n}));\n\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_ = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$submit_sync_tx_BANG_(var_args){\nvar G__50759 = arguments.length;\nswitch (G__50759) {\ncase 2:\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,tx){\nreturn com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$core$IFn$_invoke$arity$3(app__$1,tx,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (p__50760,tx,options){\nvar map__50761 = p__50760;\nvar map__50761__$1 = cljs.core.__destructure_map(map__50761);\nvar app__$1 = map__50761__$1;\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50761__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__50762 = options;\nvar map__50762__$1 = cljs.core.__destructure_map(map__50762);\nvar options__$1 = map__50762__$1;\nvar refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50762__$1,new cljs.core.Keyword(null,\"refresh\",\"refresh\",1947415525));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50762__$1,new cljs.core.Keyword(null,\"only-refresh\",\"only-refresh\",548241249));\nvar ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50762__$1,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967));\nvar follow_on_reads = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__50757_SHARP_){\nreturn (((p1__50757_SHARP_ instanceof cljs.core.Keyword)) || (edn_query_language.core.ident_QMARK_(p1__50757_SHARP_)));\n}),tx));\nvar node = com.fulcrologic.fulcro.algorithms.tx_processing.tx_node.cljs$core$IFn$_invoke$arity$2(tx,options__$1);\nvar accumulate = (function (r,items){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.set(r),items);\n});\nvar refresh__$1 = (function (){var G__50763 = cljs.core.set(refresh);\nvar G__50763__$1 = ((cljs.core.seq(follow_on_reads))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__50763,follow_on_reads):G__50763);\nif(cljs.core.truth_(ref)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__50763__$1,ref);\n} else {\nreturn G__50763__$1;\n}\n})();\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_.cljs$core$IFn$_invoke$arity$variadic(app__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),node], 0));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(runtime_atom,(function (s){\nvar G__50764 = s;\nvar G__50764__$1 = ((cljs.core.seq(refresh__$1))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__50764,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829),accumulate,refresh__$1):G__50764);\nif(cljs.core.seq(only_refresh)){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__50764__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206),accumulate,only_refresh);\n} else {\nreturn G__50764__$1;\n}\n}));\n\nif(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.in_transaction_QMARK_(app__$1)){\n} else {\nvar id__50464__auto___50909 = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625).cljs$core$IFn$_invoke$arity$1(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto___50909,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,(0)));\n\ntry{com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.run_queue_BANG_(app__$1,options__$1);\n}finally {cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.apps_in_tx,cljs.core.update,id__50464__auto___50909,cljs.core.dec);\n}}\n\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423).cljs$core$IFn$_invoke$arity$1(node);\n}));\n\n(com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_.cljs$lang$maxFixedArity = 3);\n\n/**\n * [app abort-id]\n * \n * Implementation of abort when using this tx processing\n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.abort_BANG_ = com.fulcrologic.fulcro.algorithms.tx_processing.abort_BANG_;\n/**\n * Installs synchronous transaction processing on a fulcro application.\n * \n *   ```\n *   (defonce app (stx/with-synchronous-transactions\n *               (app/fulcro-app {...})))\n *   ```\n * \n *   This plug-in attempts to do as much work as possible synchronously, including the processing of \"remotes\" that\n *   can behave synchronously. This processing system\n *   preserves transactional ordering semantics for nested submissions, but cannot guarantee that the overall sequence of\n *   operations will exactly match what you'd see if using the standard tx processing.\n * \n *   The options map you can pass to `transact!` supports most of the same things as the standard tx processing, with the significant exception of\n *   `:optimistic? false` (pessimistic transactions). It also *always* assumes synchronous operation, thought the\n *   `synchronous?` option (if used) does imply that only the current component should be refreshed in the UI.\n * \n *   - `:ref` - ident. The component ident to include in the transaction env.\n *   - `:component` - React element. The instance of the component that should appear in the transaction env.\n *   - `:synchronous?` - When true, causes the rendering to only refresh the calling component (if possible), since the implication\n *   is for fast-as-possible refresh semantics, even though this tx processing is already sync.\n *   - `:refresh` - A hint. Vector containing idents (of components) and keywords (of props). Things that have changed and should be re-rendered\n *  on screen. Only necessary when the underlying rendering algorithm won't auto-detect, such as when UI is derived from the\n *  state of other components or outside of the directly queried props. Interpretation depends on the renderer selected:\n *  The ident-optimized render treats these as \"extras\".\n *   - `:only-refresh` - A hint. Vector of idents/keywords.  If the underlying configured rendering algorithm supports it: The\n *  components using these are the *only* things that will be refreshed in the UI, and they may be refreshed immediately on\n *  `transact!`. This can be used to avoid the overhead of looking for stale data when you know exactly what\n *  you want to refresh on screen as an extra optimization. Idents are *not* checked against queries.\n * \n *   If the `options` include `:ref` (which comp/transact! sets), then it will be auto-included on the `:refresh` list.\n * \n *   Returns the transaction ID of the submitted transaction.\n *   \n */\ncom.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.with_synchronous_transactions = (function com$fulcrologic$fulcro$algorithms$tx_processing$synchronous_tx_processing$with_synchronous_transactions(app__$1){\nvar remotes = cljs.core.keys(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"remotes\",\"com.fulcrologic.fulcro.application/remotes\",1823703517).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1))));\nvar send_queues = cljs.core.zipmap(remotes,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((function (){\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\n})));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(app__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"algorithms\",\"com.fulcrologic.fulcro.application/algorithms\",-397334538),cljs.core.assoc,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithm\",\"tx!\",\"com.fulcrologic.fulcro.algorithm/tx!\",1081877133),com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithm\",\"abort!\",\"com.fulcrologic.fulcro.algorithm/abort!\",1698846123),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.abort_BANG_], 0)),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"config\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config\",-1878584178),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"submission-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue\",-1259886916),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"post-processing-steps\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps\",1202501796),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"active-queue\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue\",-1020610588),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\",\"send-queues\",\"com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queues\",-727474733),send_queues], null));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A transaction processing system that does as much synchronously as possible, and removes various elements\n   of complexity that were inherited from Fulcro 2 in the standard tx processing.\n\n   See `with-synchronous-transactions` for how to install it.\n\n   This tx processing system does as much work synchronously as possible, though it does try to preserve the\n   call-order *semantics* of the standard transaction processing: That is to say that if the optimistic action\n   of a transaction submits a new transaction then that new submission will run *after* the current already-in-progress\n   transaction has finished processing:\n\n   ```\n   (defmutation g [_]\n     (action [{:keys [state]}] (swap! state ...))\n     (ok-action [{:keys [app]}] (transact! app [(h)]))\n     (remote [_] true))\n\n   (defmutation f [_]\n     (action [{:keys [state app]}]\n       (swap! state ...)\n       (transact! app [(g)])))\n\n   ...\n   (dom/a {:onClick (fn []\n                      (transact! this [(f {:x 1})])\n                      (transact! this [(f {:x 2})])\n                      (transact! this [(f {:x 3})])))\n   ```\n\n   A user clicking the above link with std processing could see any of the following:\n\n   ```\n   f,f,f,g,g,g,h,h,h\n   f,f,f,g,h,g,g,h,h\n   f,f,f,g,g,h,g,h,h\n   etc.\n   ```\n\n   In sync tx processing, you would more likely see:\n\n   ```\n   f,g,f,g,f,g,h,h,h\n   ```\n\n   because there is *no guarantee* in Fulcro's semantics about the space between two calls to `transact!`. If your\n   application relies on the groupings that happen with the standard tx processing (submissions while holding a thread\n   go into the queue first) then your application may break when you switch to sync processing.\n\n   Note that transactions *are* treated as atomically as possible. So, if you want a specific grouping you should submit\n   it as a single tx:\n\n   ```\n   (transact! [(f) (g)])\n   (transact! [(f) (g)])\n   ```\n\n   is guaranteed to do `f,g,f,g`, and never `f,f,g,g`, though it is still possible to see `f,g,h,f,g,h`.\n\n   This sync transaction processing system allows you to push most (if not all) behavior of even nested transactions into a single\n   synchronous operation. This will lead to significant improvements in the snappiness of the UI for optimistic operation\n   and should also reduce over-rendering (multiple calls to render due to multiple async operations).\n\n   If your remote is mocked as a synchronous operation, then you can also leverage this tx processor to enable\n   completely synchronous testing of your headless Fulcro application.\n\n   WARNING: This tx processing system does *not* support:\n\n   * `ptransact!`: Pessimistic transactions are a legacy feature of Fulcro 2 that is no longer necessary. New\n   applications should not use the feature, and this sync tx processing system does not support it. The call\n   will succeed, but will behave as a normal `transact!`.\n   ","~:file","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",78],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$in-transaction","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing"],"~:excludes",["~#set",[]],"~:macros",["^ ","^F",["^ ","~:arglists",["~#list",[["~$app-sym","~$&","~$body"]]],"^8",87,"^9",4,"^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","~:name","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/in-transaction","~:ns","^G","~:macro",true]],"^O","^G","~:reader-aliases",["^ "],"~:op","^Q","~:imports",null,"~:requires",["^ ","~$ah","~$com.fulcrologic.fulcro.algorithms.lookup","~$set","~$clojure.set","~$edn-query-language.core","^[","~$log","~$taoensso.timbre","~$eql","^[","~$cljs.core","^13","~$goog","^14","^Z","^Z","~$m","~$com.fulcrologic.fulcro.mutations","~$com.fulcrologic.fulcro.algorithms.scheduling","^16","~$sched","^16","~$txn","~$com.fulcrologic.fulcro.algorithms.tx-processing","^15","^15","^X","^X","^19","^19","^11","^11"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^1<",["^ ","^G","^G","^13","^13","^10","^11","~$m","^15","^15","^15","^11","^11"],"~:form",["^L",["~$ns","^G","A transaction processing system that does as much synchronously as possible, and removes various elements\n   of complexity that were inherited from Fulcro 2 in the standard tx processing.\n\n   See `with-synchronous-transactions` for how to install it.\n\n   This tx processing system does as much work synchronously as possible, though it does try to preserve the\n   call-order *semantics* of the standard transaction processing: That is to say that if the optimistic action\n   of a transaction submits a new transaction then that new submission will run *after* the current already-in-progress\n   transaction has finished processing:\n\n   ```\n   (defmutation g [_]\n     (action [{:keys [state]}] (swap! state ...))\n     (ok-action [{:keys [app]}] (transact! app [(h)]))\n     (remote [_] true))\n\n   (defmutation f [_]\n     (action [{:keys [state app]}]\n       (swap! state ...)\n       (transact! app [(g)])))\n\n   ...\n   (dom/a {:onClick (fn []\n                      (transact! this [(f {:x 1})])\n                      (transact! this [(f {:x 2})])\n                      (transact! this [(f {:x 3})])))\n   ```\n\n   A user clicking the above link with std processing could see any of the following:\n\n   ```\n   f,f,f,g,g,g,h,h,h\n   f,f,f,g,h,g,g,h,h\n   f,f,f,g,g,h,g,h,h\n   etc.\n   ```\n\n   In sync tx processing, you would more likely see:\n\n   ```\n   f,g,f,g,f,g,h,h,h\n   ```\n\n   because there is *no guarantee* in Fulcro's semantics about the space between two calls to `transact!`. If your\n   application relies on the groupings that happen with the standard tx processing (submissions while holding a thread\n   go into the queue first) then your application may break when you switch to sync processing.\n\n   Note that transactions *are* treated as atomically as possible. So, if you want a specific grouping you should submit\n   it as a single tx:\n\n   ```\n   (transact! [(f) (g)])\n   (transact! [(f) (g)])\n   ```\n\n   is guaranteed to do `f,g,f,g`, and never `f,f,g,g`, though it is still possible to see `f,g,h,f,g,h`.\n\n   This sync transaction processing system allows you to push most (if not all) behavior of even nested transactions into a single\n   synchronous operation. This will lead to significant improvements in the snappiness of the UI for optimistic operation\n   and should also reduce over-rendering (multiple calls to render due to multiple async operations).\n\n   If your remote is mocked as a synchronous operation, then you can also leverage this tx processor to enable\n   completely synchronous testing of your headless Fulcro application.\n\n   WARNING: This tx processing system does *not* support:\n\n   * `ptransact!`: Pessimistic transactions are a legacy feature of Fulcro 2 that is no longer necessary. New\n   applications should not use the feature, and this sync tx processing system does not support it. The call\n   will succeed, but will behave as a normal `transact!`.\n   ",["^L",["^1<",["^G","~:refer",["^F"]]]],["^L",["^1;",["^Z","~:as","^Y"],["^19","^1A","^18"],["^16","^1A","^17"],["^X","^1A","^W"],["^15","^1A","~$m"],["^[","^1A","^12"],["^11","^1A","^10"]]]]],"~:flags",["^ ","^1<",["^I",[]],"^1;",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^Z","^19","^16","^X","^15","^[","^11"]],"^Q","^G","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc"],"~:compiled-at",1656688574321,"^S",["^ ","^W","^X","^Y","^Z","^[","^[","^10","^11","^12","^[","^13","^13","^14","^14","^Z","^Z","~$m","^15","^16","^16","^17","^16","^18","^19","^15","^15","^X","^X","^19","^19","^11","^11","^G","^G"],"~:resource-name","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing\n  \"A transaction processing system that does as much synchronously as possible, and removes various elements\n   of complexity that were inherited from Fulcro 2 in the standard tx processing.\n\n   See `with-synchronous-transactions` for how to install it.\n\n   This tx processing system does as much work synchronously as possible, though it does try to preserve the\n   call-order *semantics* of the standard transaction processing: That is to say that if the optimistic action\n   of a transaction submits a new transaction then that new submission will run *after* the current already-in-progress\n   transaction has finished processing:\n\n   ```\n   (defmutation g [_]\n     (action [{:keys [state]}] (swap! state ...))\n     (ok-action [{:keys [app]}] (transact! app [(h)]))\n     (remote [_] true))\n\n   (defmutation f [_]\n     (action [{:keys [state app]}]\n       (swap! state ...)\n       (transact! app [(g)])))\n\n   ...\n   (dom/a {:onClick (fn []\n                      (transact! this [(f {:x 1})])\n                      (transact! this [(f {:x 2})])\n                      (transact! this [(f {:x 3})])))\n   ```\n\n   A user clicking the above link with std processing could see any of the following:\n\n   ```\n   f,f,f,g,g,g,h,h,h\n   f,f,f,g,h,g,g,h,h\n   f,f,f,g,g,h,g,h,h\n   etc.\n   ```\n\n   In sync tx processing, you would more likely see:\n\n   ```\n   f,g,f,g,f,g,h,h,h\n   ```\n\n   because there is *no guarantee* in Fulcro's semantics about the space between two calls to `transact!`. If your\n   application relies on the groupings that happen with the standard tx processing (submissions while holding a thread\n   go into the queue first) then your application may break when you switch to sync processing.\n\n   Note that transactions *are* treated as atomically as possible. So, if you want a specific grouping you should submit\n   it as a single tx:\n\n   ```\n   (transact! [(f) (g)])\n   (transact! [(f) (g)])\n   ```\n\n   is guaranteed to do `f,g,f,g`, and never `f,f,g,g`, though it is still possible to see `f,g,h,f,g,h`.\n\n   This sync transaction processing system allows you to push most (if not all) behavior of even nested transactions into a single\n   synchronous operation. This will lead to significant improvements in the snappiness of the UI for optimistic operation\n   and should also reduce over-rendering (multiple calls to render due to multiple async operations).\n\n   If your remote is mocked as a synchronous operation, then you can also leverage this tx processor to enable\n   completely synchronous testing of your headless Fulcro application.\n\n   WARNING: This tx processing system does *not* support:\n\n   * `ptransact!`: Pessimistic transactions are a legacy feature of Fulcro 2 that is no longer necessary. New\n   applications should not use the feature, and this sync tx processing system does not support it. The call\n   will succeed, but will behave as a normal `transact!`.\n   \"\n  #?(:cljs (:require-macros [com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing :refer [in-transaction]]))\n  (:require\n    [clojure.set :as set]\n    [com.fulcrologic.fulcro.algorithms.tx-processing :as txn]\n    [com.fulcrologic.fulcro.algorithms.scheduling :as sched]\n    [com.fulcrologic.fulcro.algorithms.lookup :as ah]\n    [com.fulcrologic.fulcro.mutations :as m]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defonce apps-in-tx (atom {}))\n\n(declare run-queue! available-work?)\n\n#?(:clj\n   (defmacro in-transaction [app-sym & body]\n     `(let [id# (:com.fulcrologic.fulcro.application/id ~app-sym)]\n        (swap! apps-in-tx update id# (fnil inc 0))\n        (try\n          ~@body\n          (finally\n            (swap! apps-in-tx update id# dec))))))\n\n(defn top-level?\n  \"Returns true if the current thread is running non-nested transaction processing code.\"\n  [{:com.fulcrologic.fulcro.application/keys [id]}]\n  (= (-> apps-in-tx deref (get id 0)) 0))\n\n(defn swap-submission-queue! [app & args] (apply swap! (get-in app [::config ::submission-queue]) args))\n(defn reset-submission-queue! [app v] (reset! (get-in app [::config ::submission-queue]) v))\n(defn submission-queue [app] @(get-in app [::config ::submission-queue]))\n(defn swap-post-processing-steps! [app & args] (apply swap! (get-in app [::config ::post-processing-steps]) args))\n(defn reset-post-processing-steps! [app v] (reset! (get-in app [::config ::post-processing-steps]) v))\n(defn post-processing-steps [app] @(get-in app [::config ::post-processing-steps]))\n(defn swap-active-queue! [app & args] (apply swap! (get-in app [::config ::active-queue]) args))\n(defn reset-active-queue! [app v] (reset! (get-in app [::config ::active-queue]) v))\n(defn active-queue [app] @(get-in app [::config ::active-queue]))\n(defn swap-send-queue! [app remote & args] (apply swap! (get-in app [::config ::send-queues remote]) args))\n(defn reset-send-queue! [app remote v] (reset! (get-in app [::config ::send-queues remote]) v))\n(defn send-queue [app remote] @(get-in app [::config ::send-queues remote]))\n\n(defn run-after!\n  \"Add `f` as a function that will run after the current transaction has been fully processed.\"\n  [app f]\n  (swap-post-processing-steps! app (fnil conj []) f))\n\n(defn post-processing?\n  \"Is there post processing to do?\"\n  [app]\n  (boolean (seq (post-processing-steps app))))\n\n(defn do-post-processing!\n  \"Runs the queued post processing steps until the post-processing queue is empty.\"\n  [app]\n  (loop [steps (post-processing-steps app)]\n    (reset-post-processing-steps! app [])\n    (doseq [f steps]\n      (try\n        (f)\n        (catch #?(:clj Exception :cljs :default) e\n          (log/error e \"Post processing step failed. See https://book.fulcrologic.com/#err-stp-postproc-failed\"))))\n    (when-let [next-steps (seq (post-processing-steps app))]\n      (recur next-steps))))\n\n(defn in-transaction?\n  \"Returns true if the current thread is in the midst of running the optimistic actions of a new transaction.\"\n  [{:com.fulcrologic.fulcro.application/keys [id] :as app}]\n  (not= 0 (get @apps-in-tx id 0)))\n\n(defn release-post-render-tasks!\n  \"Should be called after the application renders to ensure that transactions blocked until the next render become\n   unblocked. Schedules an activation.\"\n  [app]\n  (swap-submission-queue! app (fn [queue] (mapv (fn [node] (update node ::txn/options dissoc :after-render?)) queue))))\n\n(defn dispatch-result!\n  \"Figure out the dispatch routine to trigger for the given network result.  If it exists, send the result\n  to it.\n\n  Returns the tx-element with the remote marked complete.\"\n  [app tx-node {::txn/keys [results dispatch desired-ast-nodes transmitted-ast-nodes original-ast-node] :as tx-element} remote]\n  (let [result  (get results remote)\n        handler (get dispatch :result-action)]\n    (when handler\n      (let [env (txn/build-env app tx-node {:dispatch        dispatch\n                                            :transacted-ast  original-ast-node\n                                            :mutation-ast    (get desired-ast-nodes remote)\n                                            :transmitted-ast (get transmitted-ast-nodes remote)\n                                            :result          result})]\n        (try\n          (handler env)\n          (catch #?(:cljs :default :clj Exception) e\n            (log/error e \"The result-action mutation handler for mutation\" (:dispatch-key original-ast-node) \"threw an exception. See https://book.fulcrologic.com/#err-stp-res-action-exc\"))))))\n  (update tx-element ::txn/complete? conj remote))\n\n(defn distribute-element-results!\n  \"Distribute results and mark the remotes for those elements as complete.\"\n  [app tx-node {:keys [::txn/results ::txn/complete?] :as tx-element}]\n  (reduce\n    (fn [new-element remote]\n      (if (complete? remote)\n        new-element\n        (dispatch-result! app tx-node new-element remote)))\n    tx-element\n    (keys results)))\n\n(defn- node-index [queue txn-id]\n  (let [n   (count queue)\n        idx (reduce\n              (fn [idx {:keys [::txn/id]}]\n                (if (= id txn-id)\n                  (reduced idx)\n                  (inc idx)))\n              0\n              queue)]\n    (when (< idx n)\n      idx)))\n\n(defn distribute-results!\n  \"Side-effects against the app state to distribute the result for txn-id element at ele-idx. This will call the result\n   handler and mark that remote as complete.\"\n  [app txn-id ele-idx]\n  (let [active-queue (active-queue app)\n        idx          (node-index active-queue txn-id)\n        tx-node      (get active-queue idx)]\n    (swap-active-queue! app update-in [idx ::txn/elements ele-idx]\n      #(distribute-element-results! app tx-node %))))\n\n(defn record-result!\n  \"Deal with a network result on the given txn/element.\"\n  ([app txn-id ele-idx remote result result-key]\n   (let [active-queue (active-queue app)\n         txn-idx      (node-index active-queue txn-id)\n         not-found?   (or (>= txn-idx (count active-queue)) (not= txn-id (::txn/id (get active-queue txn-idx))))]\n     (if not-found?\n       (log/error \"Network result for\" remote \"does not have a valid node on the active queue! See https://book.fulcrologic.com/#err-stp-res-lacks-valid-node\")\n       (do\n         (swap-active-queue! app assoc-in [txn-idx ::txn/elements ele-idx result-key remote] result)\n         (distribute-results! app txn-id ele-idx)))))\n  ([app txn-id ele-idx remote result]\n   (record-result! app txn-id ele-idx remote result ::txn/results)))\n\n(defn remove-send!\n  \"Removes the send node (if present) from the send queue on the given remote.\"\n  [app remote txn-id ele-idx]\n  (swap-send-queue! app remote (fn [old-queue]\n                                 (filterv (fn [{::txn/keys [id idx]}]\n                                            (not (and (= txn-id id) (= ele-idx idx)))) old-queue))))\n\n(defn add-send!\n  \"Generate a new send node and add it to the appropriate send queue.\"\n  [app {::txn/keys [id options] :as tx-node} ele-idx remote]\n  (let [update-handler (fn progress-handler* [result]\n                         (in-transaction app\n                           (record-result! app id ele-idx remote result ::txn/progress)\n                           (run-queue! app {})))\n        ast            (get-in tx-node [::txn/elements ele-idx ::txn/transmitted-ast-nodes remote])\n        handler        (fn result-handler* [result]\n                         (in-transaction app\n                           (record-result! app id ele-idx remote result)\n                           (remove-send! app remote id ele-idx)\n                           (run-queue! app {})))\n        send-node      {::txn/id             id\n                        ::txn/idx            ele-idx\n                        ::txn/ast            ast\n                        ::txn/options        options\n                        ::txn/active?        false\n                        ::txn/result-handler handler\n                        ::txn/update-handler update-handler}]\n    (if ast\n      (swap-send-queue! app remote (fnil conj []) send-node)\n      ;; The handler would make a recursive call back to the queue processing, so we have to defer it if the AST wasn't set\n      (sched/defer #(handler {:status-code 200 :body {}}) 1))\n    nil))\n\n(defn queue-element-sends!\n  \"Queue all (unqueued) remote actions for the given element.  Returns the (possibly updated) node.\"\n  [app tx-node {::txn/keys [idx dispatch started?]}]\n  (let [remotes     (set/intersection (set (keys dispatch)) (txn/app->remote-names app))\n        to-dispatch (set/difference remotes started?)]\n    (reduce\n      (fn [node remote]\n        (if (contains? (get-in node [::txn/elements idx ::txn/started?] #{}) remote)\n          node\n          (let [updated-node (-> node\n                               (update-in [::txn/elements idx] (fn [tx-element] (txn/compute-desired-ast-node app remote node tx-element)))\n                               (update-in [::txn/elements idx ::txn/started?] conj remote))]\n            (add-send! app updated-node idx remote)\n            updated-node)))\n      tx-node\n      to-dispatch)))\n\n(defn queue-sends!\n  \"Finds any item(s) on the given node that are ready to be placed on the network queues and adds them. Non-optimistic\n  multi-element nodes will only queue one remote operation at a time.\"\n  [app {:keys [::txn/options ::txn/elements] :as tx-node}]\n  (reduce\n    (fn [node element]\n      (queue-element-sends! app node element))\n    tx-node\n    elements))\n\n(defn process-tx-node!\n  [app {:keys [::txn/options] :as tx-node}]\n  (if (txn/fully-complete? app tx-node)\n    nil\n    (->> tx-node\n      (txn/run-actions! app)\n      (queue-sends! app)\n      (txn/update-progress! app))))\n\n(defn process-send-queues!\n  \"Process the send queues against the remotes, which will cause idle remotes with queued work to issue network requests.\"\n  [app]\n  (let [remote-names (txn/app->remote-names app)\n        operations   (atom [])]\n    (doseq [remote remote-names]\n      (let [send-queue (send-queue app remote)\n            [p serial] (txn/extract-parallel send-queue)\n            front      (first serial)]\n        ;; parallel items are removed from the queues, since they don't block anything\n        (doseq [item p]\n          (swap! operations conj #(txn/net-send! app item remote)))\n        ;; sequential items are kept in queue to prevent out-of-order operation\n        (if (::active? front)\n          (reset-send-queue! app remote serial)\n          (let [{::txn/keys [send-queue send-node]} (txn/combine-sends app remote serial)]\n            (when send-node\n              (swap! operations conj #(txn/net-send! app send-node remote)))\n            (reset-send-queue! app remote send-queue)))))\n    ;; Actual net sends are done after we set the queues, in case the remote behave synchronously and immediately gives\n    ;; results (like errors). Otherwise, nested send queue updates in those handlers could confuse our notion of what's going on.\n    (doseq [op @operations]\n      (op))))\n\n(defn process-queue!\n  \"Run through the active queue and do a processing step.\"\n  [{:com.fulcrologic.fulcro.application/keys [state-atom runtime-atom] :as app}]\n  (let [old-queue        (active-queue app)\n        new-queue        (reduce\n                           (fn *pstep [new-queue n]\n                             (if-let [new-node (process-tx-node! app n)]\n                               (conj new-queue new-node)\n                               new-queue))\n                           []\n                           old-queue)\n        accumulate       (fn [r items] (into (set r) items))\n        remotes          (txn/app->remote-names app)\n        explicit-refresh (txn/requested-refreshes app new-queue)\n        remotes-active?  (txn/active-remotes new-queue remotes)]\n    (when (not= old-queue (active-queue app))\n      (log/error \"Old queue changed! See https://book.fulcrologic.com/#err-stp-old-queue-chng\"))\n    (swap! state-atom assoc :com.fulcrologic.fulcro.application/active-remotes remotes-active?)\n    (reset-active-queue! app new-queue)\n    (when (seq explicit-refresh)\n      (swap! runtime-atom update :com.fulcrologic.fulcro.application/to-refresh accumulate explicit-refresh))\n    (process-send-queues! app)\n    nil))\n\n(defn available-work?\n  \"Returns true if the submission queue has work on it that can proceed without any restrictions.\"\n  [app]\n  (let [{ready false} (group-by (comp boolean :after-render? ::txn/options) (submission-queue app))]\n    (boolean (seq ready))))\n\n(defn activate-submissions!\n  \"Activate all of the transactions that have been submitted since the last activation. After the items are activated\n  a single processing step will run for the active queue.\n\n  Activation can be blocked by the tx-node options for things like waiting for the next render frame.\"\n  [app]\n  (let [{blocked true ready false} (group-by (comp boolean :after-render? ::txn/options) (submission-queue app))\n        _                (reset-submission-queue! app (vec blocked))\n        dispatched-nodes (mapv #(txn/dispatch-elements % (txn/build-env app %) m/mutate) ready)]\n    (swap-active-queue! app (fnil into []) dispatched-nodes)\n    (process-queue! app)))\n\n(defn run-all-immediate-work!\n  \"Runs the submission queue. If the submission queue's optimistic actions submit more to the submission queue, then those\n   are processed as well until the submission queue remains empty. This can start network requests.\"\n  [app]\n  (try\n    (activate-submissions! app)\n    (catch #?(:cljs :default :clj Exception) e\n      (log/error e \"Error processing tx queue! See https://book.fulcrologic.com/#err-stp-err-processing-tx-q\"))))\n\n(defn run-queue! [app {:keys [component synchronous?] :as options}]\n  (loop []\n    (run-all-immediate-work! app)\n    (when (available-work? app)\n      (recur)))\n  (if (and synchronous? component)\n    (when-let [refresh-component! (ah/app-algorithm app :refresh-component!)]\n      (refresh-component! component))\n    (when-let [render! (ah/app-algorithm app :render!)]\n      (render! app options)))\n  (release-post-render-tasks! app)\n  (when (available-work? app)\n    (recur app {})))\n\n(defn sync-tx! [& args] (throw (ex-info \"BREAKING CHANGE. Please use `with-synchronous-transaction` to add sync transaction support to your Fulcro app\" {})))\n\n(defn submit-sync-tx!\n  ([app tx]\n   (submit-sync-tx! app tx {}))\n  ([{:com.fulcrologic.fulcro.application/keys [runtime-atom] :as app} tx options]\n   (let [{:keys [refresh only-refresh ref] :as options} options\n         follow-on-reads (into #{} (filter #(or (keyword? %) (eql/ident? %)) tx))\n         node            (txn/tx-node tx options)\n         accumulate      (fn [r items] (into (set r) items))\n         refresh         (cond-> (set refresh)\n                           (seq follow-on-reads) (into follow-on-reads)\n                           ref (conj ref))]\n     (swap-submission-queue! app (fnil conj []) node)\n     (swap! runtime-atom (fn [s] (cond-> s\n                                   ;; refresh sets are cumulative because rendering is debounced\n                                   (seq refresh) (update :com.fulcrologic.fulcro.application/to-refresh accumulate refresh)\n                                   (seq only-refresh) (update :com.fulcrologic.fulcro.application/only-refresh accumulate only-refresh))))\n     (when-not (in-transaction? app)\n       (in-transaction app\n         (run-queue! app options)))\n     (::txn/id node))))\n\n(def abort!\n  \"[app abort-id]\n\n   Implementation of abort when using this tx processing\"\n  txn/abort!)\n\n(defn with-synchronous-transactions\n  \"Installs synchronous transaction processing on a fulcro application.\n\n  ```\n  (defonce app (stx/with-synchronous-transactions\n                 (app/fulcro-app {...})))\n  ```\n\n  This plug-in attempts to do as much work as possible synchronously, including the processing of \\\"remotes\\\" that\n  can behave synchronously. This processing system\n  preserves transactional ordering semantics for nested submissions, but cannot guarantee that the overall sequence of\n  operations will exactly match what you'd see if using the standard tx processing.\n\n  The options map you can pass to `transact!` supports most of the same things as the standard tx processing, with the significant exception of\n  `:optimistic? false` (pessimistic transactions). It also *always* assumes synchronous operation, thought the\n  `synchronous?` option (if used) does imply that only the current component should be refreshed in the UI.\n\n  - `:ref` - ident. The component ident to include in the transaction env.\n  - `:component` - React element. The instance of the component that should appear in the transaction env.\n  - `:synchronous?` - When true, causes the rendering to only refresh the calling component (if possible), since the implication\n  is for fast-as-possible refresh semantics, even though this tx processing is already sync.\n  - `:refresh` - A hint. Vector containing idents (of components) and keywords (of props). Things that have changed and should be re-rendered\n    on screen. Only necessary when the underlying rendering algorithm won't auto-detect, such as when UI is derived from the\n    state of other components or outside of the directly queried props. Interpretation depends on the renderer selected:\n    The ident-optimized render treats these as \\\"extras\\\".\n  - `:only-refresh` - A hint. Vector of idents/keywords.  If the underlying configured rendering algorithm supports it: The\n    components using these are the *only* things that will be refreshed in the UI, and they may be refreshed immediately on\n    `transact!`. This can be used to avoid the overhead of looking for stale data when you know exactly what\n    you want to refresh on screen as an extra optimization. Idents are *not* checked against queries.\n\n  If the `options` include `:ref` (which comp/transact! sets), then it will be auto-included on the `:refresh` list.\n\n  Returns the transaction ID of the submitted transaction.\n  \"\n  [app]\n  (let [remotes     (-> app :com.fulcrologic.fulcro.application/runtime-atom deref\n                      :com.fulcrologic.fulcro.application/remotes keys)\n        send-queues (zipmap remotes (repeatedly #(atom [])))]\n    (-> app\n      (update :com.fulcrologic.fulcro.application/algorithms assoc\n        :com.fulcrologic.fulcro.algorithm/tx! submit-sync-tx!\n        :com.fulcrologic.fulcro.algorithm/abort! abort!)\n      (assoc ::config {::submission-queue      (atom [])\n                       ::post-processing-steps (atom [])\n                       ::active-queue          (atom [])\n                       ::send-queues           send-queues}))))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["js/com","js/com.fulcrologic","js/com.fulcrologic.fulcro","js/com.fulcrologic.fulcro.algorithms","js/com.fulcrologic.fulcro.algorithms.tx-processing","js/com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing","js/com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing.apps-in-tx","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/apps-in-tx","cljs.core.atom","p__50663","map__50664","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/top-level?","id","cljs.core._EQ_","cljs.core/deref","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-submission-queue!","seq50665","G__50666","cljs.core/first","cljs.core/next","self__5751__auto__","app","args","cljs.core.apply","cljs.core/swap!","cljs.core.get_in","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-submission-queue!","v","cljs.core/reset!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-post-processing-steps!","seq50667","G__50668","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-post-processing-steps!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-active-queue!","seq50669","G__50670","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-active-queue!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-send-queue!","seq50671","G__50672","G__50673","remote","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-send-queue!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queue","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-after!","f","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_post_processing_steps_BANG_","cljs.core.fnil","cljs.core/conj","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing?","cljs.core/boolean","cljs.core/seq","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/do-post-processing!","steps","seq__50674","chunk__50675","count__50676","i__50677","temp__5753__auto__","cljs.core/chunked-seq?","c__5565__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","e50680","e50681","e","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","next-steps","p__50682","map__50683","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/in-transaction?","cljs.core.not_EQ_","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/release-post-render-tasks!","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_submission_queue_BANG_","queue","cljs.core.mapv","node","cljs.core.update","cljs.core/dissoc","p__50684","map__50685","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/dispatch-result!","tx-node","results","dispatch","desired-ast-nodes","transmitted-ast-nodes","original-ast-node","tx-element","result","handler","env","com.fulcrologic.fulcro.algorithms.tx_processing.build_env","e50686","p__50687","map__50688","complete?","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/distribute-element-results!","cljs.core.reduce","new-element","cljs.core/keys","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/node-index","txn-id","n","idx","p__50689","map__50690","cljs.core/reduced","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/distribute-results!","ele-idx","active-queue","p1__50691#","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_active_queue_BANG_","cljs.core/update-in","G__50693","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/record-result!","js/Error","result-key","txn-idx","not-found?","cljs.core/assoc-in","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.record_result_BANG_","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/remove-send!","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.swap_send_queue_BANG_","old-queue","cljs.core/filterv","p__50694","map__50695","p__50696","map__50697","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/add-send!","options","update-handler","id__50464__auto__","cljs.core.swap_BANG_","cljs.core/update","cljs.core/inc","cljs.core/dec","G__50698","G__50699","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-queue!","ast","G__50700","G__50701","send-node","com.fulcrologic.fulcro.algorithms.scheduling/defer","p__50702","map__50703","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/queue-element-sends!","started?","remotes","clojure.set.intersection","cljs.core/set","com.fulcrologic.fulcro.algorithms.tx-processing/app->remote-names","to-dispatch","clojure.set.difference","cljs.core/contains?","updated-node","cljs.core.update_in","com.fulcrologic.fulcro.algorithms.tx-processing/compute-desired-ast-node","p__50704","map__50705","elements","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/queue-sends!","element","p__50706","map__50707","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-tx-node!","com.fulcrologic.fulcro.algorithms.tx-processing/fully-complete?","com.fulcrologic.fulcro.algorithms.tx-processing/run-actions!","com.fulcrologic.fulcro.algorithms.tx-processing/update-progress!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-send-queues!","remote-names","operations","seq__50708","chunk__50709","count__50710","i__50711","vec__50728","cljs.core.nth","vec__50736","send-queue","p","serial","com.fulcrologic.fulcro.algorithms.tx-processing/extract-parallel","front","seq__50731","chunk__50732","count__50733","i__50734","seq__50739","chunk__50740","count__50741","i__50742","item","com.fulcrologic.fulcro.algorithms.tx-processing/net-send!","map__50735","map__50743","com.fulcrologic.fulcro.algorithms.tx-processing/combine-sends","seq__50744","chunk__50745","count__50746","i__50747","op","p__50748","map__50749","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-queue!","state-atom","runtime-atom","new-queue","temp__5751__auto__","new-node","cljs.core.conj","accumulate","r","items","cljs.core.into","explicit-refresh","com.fulcrologic.fulcro.algorithms.tx-processing/requested-refreshes","remotes-active?","com.fulcrologic.fulcro.algorithms.tx-processing/active-remotes","cljs.core/assoc","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/available-work?","map__50750","ready","cljs.core/group-by","cljs.core.comp","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/activate-submissions!","map__50752","blocked","_","cljs.core/vec","dispatched-nodes","p1__50751#","com.fulcrologic.fulcro.algorithms.tx-processing/dispatch-elements","com.fulcrologic.fulcro.mutations/mutate","cljs.core/into","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-all-immediate-work!","e50753","p__50754","map__50755","component","synchronous?","and__5041__auto__","refresh-component!","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","render!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/sync-tx!","seq50756","self__5752__auto__","cljs.core.ex_info","G__50759","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submit-sync-tx!","p__50760","map__50761","tx","com.fulcrologic.fulcro.algorithms.tx_processing.synchronous_tx_processing.submit_sync_tx_BANG_","map__50762","refresh","only-refresh","ref","follow-on-reads","p1__50757#","cljs.core.filter","cljs.core/Keyword","edn-query-language.core/ident?","com.fulcrologic.fulcro.algorithms.tx_processing.tx_node","G__50763","s","G__50764","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/abort!","com.fulcrologic.fulcro.algorithms.tx-processing/abort!","com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/with-synchronous-transactions","send-queues","cljs.core/zipmap","cljs.core.repeatedly","cljs.core.assoc"]],"~:used-vars",["^I",["~$com.fulcrologic.fulcro.algorithms.tx-processing/requested-refreshes","~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-submission-queue!","~$cljs.core/comp","~$clojure.set/intersection","~$com.fulcrologic.fulcro.algorithms.scheduling/defer","~$js/com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing.apps-in-tx","~$js/com.fulcrologic.fulcro.algorithms.tx-processing","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/node-index","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-queue!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-submission-queue!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue","~$com.fulcrologic.fulcro.algorithms.tx-processing/net-send!","~$com.fulcrologic.fulcro.algorithms.tx-processing/dispatch-elements","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/activate-submissions!","~$com.fulcrologic.fulcro.algorithms.tx-processing/update-progress!","~$cljs.core/repeatedly","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/distribute-results!","~$cljs.core/filter","~$cljs.core/=","~$cljs.core/keys","~$com.fulcrologic.fulcro.algorithms.tx-processing/app->remote-names","~$cljs.core/dec","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/dispatch-result!","~$taoensso.timbre/-log!","~$cljs.core/IndexedSeq","~$com.fulcrologic.fulcro.mutations/mutate","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-send-queues!","~$cljs.core/count","~$js/com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing","~$cljs.core/deref","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/record-result!","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$js/com.fulcrologic.fulcro","~$cljs.core/Keyword","~$cljs.core/group-by","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/queue-sends!","~$cljs.core/mapv","~$cljs.core/not=","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-send-queue!","~$cljs.core/dissoc","~$cljs.core/Delay","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/top-level?","~$cljs.core/chunk-rest","~$cljs.core/atom","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing?","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/distribute-element-results!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps","~$cljs.core/set","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/release-post-render-tasks!","~$cljs.core/fnil","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-after!","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/reset!","~$cljs.core/conj","~$com.fulcrologic.fulcro.algorithms.tx-processing/fully-complete?","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-active-queue!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/queue-element-sends!","~$cljs.core/zipmap","~$cljs.core/update","~$js/com.fulcrologic","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submit-sync-tx!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-queue!","~$com.fulcrologic.fulcro.algorithms.tx-processing/run-actions!","~$cljs.core/filterv","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/process-tx-node!","~$cljs.core/get-in","~$cljs.core/swap!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/abort!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/do-post-processing!","~$cljs.core/get","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-active-queue!","~$cljs.core/-nth","~$js/com","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/add-send!","~$clojure.set/difference","~$js/com.fulcrologic.fulcro.algorithms","~$com.fulcrologic.fulcro.algorithms.tx-processing/extract-parallel","~$cljs.core/reduced","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/next","~$cljs.core/vec","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-post-processing-steps!","~$com.fulcrologic.fulcro.algorithms.tx-processing/build-env","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/sync-tx!","~$cljs.core/not","~$com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/available-work?","~$com.fulcrologic.fulcro.algorithms.tx-processing/tx-node","~$cljs.core/assoc","~$cljs.core/assoc-in","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/in-transaction?","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/reset-post-processing-steps!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/apps-in-tx","~$com.fulcrologic.fulcro.algorithms.tx-processing/abort!","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/swap-send-queue!","~$com.fulcrologic.fulcro.algorithms.tx-processing/active-remotes","~$cljs.core/first","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queue","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/remove-send!","~$com.fulcrologic.fulcro.algorithms.tx-processing/compute-desired-ast-node","~$cljs.core/update-in","~$js/Error","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/with-synchronous-transactions","~$cljs.core/boolean","~$com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/run-all-immediate-work!","~$cljs.core/inc","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.algorithms.tx-processing/combine-sends"]]],"~:cache-keys",["~#cmap",[["^1F","com/fulcrologic/fulcro/algorithms/normalize.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^14","^13","~$com.fulcrologic.fulcro.algorithms.do-not-use","^[","^11","~$com.fulcrologic.fulcro.raw.components"]]],["^1F","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.dom.HtmlElement"]]],["^1F","goog/async/freelist.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$cljs.core.async.impl.protocols"]]],["^1F","goog/i18n/datetimesymbols.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1F","expound/util.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^@"]]],["^1F","goog/crypt/crypt.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.asserts"]]],["^1F","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4L","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1F","goog/timer/timer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1F","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^11"]]],["^1F","cljs/spec/gen/alpha.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$goog.Uri"]]],["^1F","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$clojure.string","~$goog.string"]]],["^1F","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O"]]],["^1F","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4["]]],["^1F","goog/events/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1F","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","~$goog.object","^4N","^4M"]]],["^1F","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4M"]]],["^1F","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O"]]],["^1F","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^11","^4Z","^[","^52","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1F","expound/problems.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$expound.paths","^@"]]],["^1F","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4N","~$goog.reflect","^4M"]]],["^1F","goog/structs/prioritypool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1F","goog/events/eventlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.events.Event","~$goog.events.EventId"]]],["^1F","goog/async/run.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1F","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1F","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/async/workqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.async.FreeList","^4O"]]],["^1F","com/fulcrologic/fulcro/dom/events.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","goog/events/events.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^50","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","^5C","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1F","goog/promise/resolver.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4V"]]],["^1F","goog/events/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^4[","~$goog.string.StringBuffer"]]],["^1F","goog/structs/priorityqueue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.structs.Heap"]]],["^1F","goog/net/xhrio.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.Timer","^4U","^4O","~$goog.collections.maps","^5J","^4W","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^52","^4[","~$goog.uri.utils","^51","^4Y","^5N","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1F","goog/promise/thenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4V"]]],["^1F","goog/collections/iters.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^Z","^19","^16","^X","^15","^[","^11"]]],["^1F","com/fulcrologic/fulcro/algorithms/transit.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1F","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","com/fulcrologic/guardrails/utils.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$clojure.walk"]]],["^1F","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^52"]]],["^1F","cljs/pprint.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z","^4[","^5X"]]],["^1F","com/fulcrologic/fulcro/algorithms/data_targeting.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^Z","^@","^6:","^[","^11"]]],["^1F","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^5T","^5U","^5V","^5S","^4U","^4[","^5X"]]],["^1F","expound/alpha.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$expound.problems","^@","^4Z","^Z","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1F","taoensso/timbre.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^1F","goog/net/wrapperxmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^67","^68"]]],["^1F","goog/date/utcdatetime.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^1F","goog/i18n/nativelocaledigits.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/events/eventtarget.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.Disposable","^4O","~$goog.events","^5B","^5L","^5M","^52","^5C","^5O","^5Q"]]],["^1F","com/fulcrologic/guardrails/core.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^4Z","~$expound.alpha"]]],["^1F","goog/disposable/disposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1F","expound/ansi.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z"]]],["^1F","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O"]]],["^1F","taoensso/encore.cljc"],["3c13701902dfed7dc5718fb3b45d8f2647459601","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z","^Z","~$cljs.reader","~$cljs.tools.reader.edn","^52","^4U","^4[","~$goog.string.format","^5X","^6I","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^63","^62","~$taoensso.truss"]]],["^1F","goog/structs/set.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1655454131000,1655454131000,1654064059000],["^1F","taoensso/timbre/appenders/core.cljc"],["3e3c831bd3add911782b6db41dc04e62be6a0cbc","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z","^6B"]]],["^1F","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^5?"]]],["^1F","goog/events/listener.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5Q","^5L"]]],["^1F","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.fs.blob","^53","~$goog.html.SafeScript","~$goog.html.trustedtypes","^55","^56","^57","^58"]]],["^1F","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4L","^4S","^4Q"]]],["^1F","goog/events/listenermap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^5R","^52","^5C","^5L","^5Q"]]],["^1F","goog/events/eventid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$taoensso.truss.impl"]]],["^1F","com/fulcrologic/guardrails/registry.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/events/eventwrapper.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1F","com/fulcrologic/fulcro/algorithms/merge.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$com.fulcrologic.fulcro.algorithms.data-targeting","^4J","^X","~$com.fulcrologic.fulcro.algorithms.normalize","^4I","^[","^11","^6;"]]],["^1F","edn_query_language/core.cljc"],["b84a23845b07ae3bcbbdef96e40bca48264c6561","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^@"]]],["^1F","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Q","^5E"]]],["^1F","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^57","~$goog.html.SafeUrl","^58","^4O","^4M"]]],["^1F","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^71","~$goog.html.SafeStyle","^78","^54","~$goog.html.uncheckedconversions","^57","^4M"]]],["^1F","expound/paths.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^@","^6?"]]],["^1F","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^Z"]]],["^1F","clojure/walk.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","goog/useragent/product.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5<","^5>","^51"]]],["^1F","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","goog/net/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/structs/map.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.collections.iters","^6Z","~$goog.iter.StopIteration","~$goog.iter.es6"]]],["^1F","goog/net/xhriopool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6S","~$goog.structs.PriorityPool","^6Y"]]],["^1F","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/date/date.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.i18n.DateTimeSymbols","^4["]]],["^1F","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^57","^55","^56","^71","^7<","~$goog.html.SafeStyleSheet","^78","~$goog.dom.TagName","^54","^58","^4O","^5<","^4U","^52","^4M","~$goog.dom.tags","^72"]]],["^1F","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^52"]]],["^1F","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","com/fulcrologic/fulcro/raw/components.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^52","^Z","^4Z","^6<","~$com.fulcrologic.fulcro.algorithms.denormalize","^4I","^X","^[","^6B","^11"]]],["^1F","goog/structs/queue.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U"]]],["^1F","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^4M","^4N"]]],["^1F","com/fulcrologic/fulcro/inspect/transit.cljs"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^69","~$com.cognitect.transit.types","~$com.fulcrologic.fulcro.algorithms.transit","^11"]]],["^1F","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^5H","^7G"]]],["^1F","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/reader.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^52","^5W","^6Q","^5X"]]],["^1F","com/fulcrologic/fulcro/mutations.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4J","~$com.fulcrologic.fulcro.dom.events","^6:","^[","^11","^6B","^@","^4I","^76","~$com.fulcrologic.fulcro.algorithms.merge","^X","^6;","^4Z"]]],["^1F","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^4O","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^7D","~$goog.dom.safe","^7;","^7=","~$goog.math.Coordinate","~$goog.math.Size","^52","^4[","^57","~$goog.string.Unicode","^51"]]],["^1F","com/fulcrologic/guardrails/impl/externs.cljc"],["9ef91f8ca04cc8d2757fb5704e0d3fb96117e65e","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$com.fulcrologic.guardrails.registry","^6K"]]],["^1F","com/fulcrologic/fulcro/specs.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^@","^6:","^4I","^["]]],["^1F","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.debug.Error","^7N"]]],["^1F","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4L"]]],["^1F","goog/i18n/timezone.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","~$goog.date.DateLike","^52","^4["]]],["^1F","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^4O","^5[","^4[","^6W","^66","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1F","goog/net/errorcode.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/iter/es6.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.iter.Iterable","^6Z","^7?"]]],["^1F","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/debug/errorhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6H","^4O","~$goog.debug.EntryPointMonitor","^7T"]]],["^1F","goog/disposable/idisposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/promise/promise.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4X","^4O","^5I","~$goog.async.run","^5F","^7T","~$goog.promise.Resolver"]]],["^1F","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4L","^4P","^4S"]]],["^1F","cljs/spec/alpha.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^52","^6<","~$cljs.spec.gen.alpha","^4Z"]]],["^1F","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",[]]],["^1F","goog/json/hybrid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.json"]]],["^1F","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^52"]]],["^1F","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^5T","^4Z","~$cljs.tools.reader.impl.inspect"]]],["^1F","com/fulcrologic/fulcro/algorithms/scheduling.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^6:","^B","^11"]]],["^1F","goog/disposable/dispose.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","clojure/string.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4[","^5X"]]],["^1F","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^6<"]]],["^1F","goog/structs/pool.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6H","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1F","com/fulcrologic/fulcro/inspect/diff.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^@"]]],["^1F","goog/net/httpstatus.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/i18n/datetimeformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^6D","~$goog.date.UtcDateTime","^7B","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^4[","~$goog.i18n.DateTimeSymbolsType"]]],["^1F","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7I","^7G","~$goog.math.Long"]]],["^1F","goog/structs/heap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^52","~$goog.structs.Node"]]],["^1F","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O"]]],["^1F","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7O","^7=","^57","^4M"]]],["^1F","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7I","~$com.cognitect.transit.eq","^8:"]]],["^1F","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.labs.userAgent","^4M"]]],["^1F","expound/printer.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^4Z","^@","^D","^Z","^6?","^6@","^5;","^6<","^6R","^4["]]],["^1F","com/fulcrologic/fulcro/algorithms/tx_processing.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^Z","^@","^X","^6;","^4I","^16","^15","^4J","~$com.fulcrologic.fulcro.specs","~$com.fulcrologic.fulcro.inspect.inspect-client","^6:","^[","^6B","^11"]]],["^1F","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7I"]]],["^1F","goog/debug/debug.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","~$goog.debug.errorcontext"]]],["^1F","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","~$goog.math"]]],["^1F","goog/debug/errorcontext.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^5U","^4[","^5X"]]],["^1F","goog/iter/iter.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4U","^4O","~$goog.debug","^7:","^8A"]]],["^1F","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5J","~$goog.dom","^7D","^7:","^5<","^5="]]],["^1F","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^7;","^71","^7<","^7C","^78","^54","^57","^4M","^55"]]],["^1F","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7J"]]],["^1F","goog/events/event.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6H","^5C"]]],["^1F","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^5S","^5T","^5U"]]],["^1F","goog/events/eventhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6H","^6I","^52","^5B","^5C","^4W","^5P"]]],["^1F","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cljs/core.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^8:","~$goog.math.Integer","^4[","^52","^4U","^4Y","^5X"]]],["^1F","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7I","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^7G","^8<","^5G","^5H"]]],["^1F","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^57","^58","^72","^4O"]]],["^1F","goog/log/log.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^8B"]]],["^1F","goog/async/throwexception.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^57","^7<","^58","^52","^4O","^4M"]]],["^1F","goog/structs/collection.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/events/browserevent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^8B","^5B","~$goog.events.EventType","^5?","^51"]]],["^1F","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5?"]]],["^1F","goog/structs/node.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^51"]]],["^1F","clojure/set.cljs"],["81c8fd45d40669c6a173bd1066b9cd90fa8b1a1b","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13"]]],["^1F","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^4["]]],["^1F","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^58"]]],["^1F","goog/disposable/disposeall.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^6N"]]],["^1F","goog/json/json.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/i18n/localefeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","goog/events/listenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5C","^5O","^5Q"]]],["^1F","goog/events/listenablekey.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^5L"]]],["^1F","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^7I","^5H","~$com.cognitect.transit.handlers","^7G","^7J","^8:"]]],["^1F","goog/net/xmlhttpfactory.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^67"]]],["^1F","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^Z","^[","^11"]]],["^1F","goog/net/xmlhttp.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","~$goog.net.WrapperXmlHttpFactory","^68","^67"]]],["^1F","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],["40bf4de481d2fba7fcc940dfaab8f2d9558eab4f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","^[","^X","^52","~$com.fulcrologic.fulcro.inspect.diff","~$com.fulcrologic.fulcro.inspect.transit","^B","^6B","^11"]]],["^1F","goog/net/xhrlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14"]]],["^1F","cognitect/transit.cljs"],["ae688999ee978d238bffd4df0c0323e552d6d8dc","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^13","~$com.cognitect.transit","^7G","^8<","^8:"]]],["^1F","goog/crypt/base64.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4E",["^ ","^4F",null,"^4G",["^I",[]],"^4H",["^14","^4O","^59","^4M","^51","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/mutations.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/normalize.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/encore/3.12.1/encore-3.12.1.jar!/taoensso/encore.cljc",1654064040000,"jar:file:/home/pushkar/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1653101298000,"jar:file:/home/pushkar/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1653101298000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/core.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/registry.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/data/json.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/reader.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map/base64_vlq.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre/appenders/core.cljc",1654064100000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/edn-query-language/eql/1.0.2/eql-1.0.2.jar!/edn_query_language/core.cljc",1656682131000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/util.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/tx_processing.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/utils.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map/base64.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/scheduling.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/parser.clj",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/source_map.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/dom/events.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/passes/and_or.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/env.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/printer.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/spec/gen/alpha.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/timbre/5.1.2/timbre-5.1.2.jar!/taoensso/timbre.cljc",1654064100000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/pprint.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/js_deps.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/ansi.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1653132171000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/spec/alpha.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/core.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/compiler.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/passes.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/util.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/problems.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1655451982000,"jar:file:/home/pushkar/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1655451979000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/instant.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/impl.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/raw/components.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1653123567000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/alpha.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1653123568000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/config.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/externs.clj",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/analyzer/impl/namespaces.cljc",1654064059000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1653101299000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/merge.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/algorithms/data_targeting.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1654064085000,"jar:file:/home/pushkar/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/paths.cljc",1653132183000,"jar:file:/home/pushkar/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1654064085000,"jar:file:/home/pushkar/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1653132170000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/fulcro/3.5.22/fulcro-3.5.22.jar!/com/fulcrologic/fulcro/inspect/inspect_client.cljc",1656682132000,"jar:file:/home/pushkar/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1653132171000,"jar:file:/home/pushkar/.m2/repository/com/fulcrologic/guardrails/1.1.11/guardrails-1.1.11.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1654064023000,"jar:file:/home/pushkar/.m2/repository/org/clojure/clojurescript/1.11.54/clojurescript-1.11.54.jar!/cljs/tagged_literals.cljc",1654064059000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A transaction processing system that does as much synchronously as possible, and removes various elements\n   of complexity that were inherited from Fulcro 2 in the standard tx processing.\n\n   See `with-synchronous-transactions` for how to install it.\n\n   This tx processing system does as much work synchronously as possible, though it does try to preserve the\n   call-order *semantics* of the standard transaction processing: That is to say that if the optimistic action\n   of a transaction submits a new transaction then that new submission will run *after* the current already-in-progress\n   transaction has finished processing:\n\n   ```\n   (defmutation g [_]\n     (action [{:keys [state]}] (swap! state ...))\n     (ok-action [{:keys [app]}] (transact! app [(h)]))\n     (remote [_] true))\n\n   (defmutation f [_]\n     (action [{:keys [state app]}]\n       (swap! state ...)\n       (transact! app [(g)])))\n\n   ...\n   (dom/a {:onClick (fn []\n                      (transact! this [(f {:x 1})])\n                      (transact! this [(f {:x 2})])\n                      (transact! this [(f {:x 3})])))\n   ```\n\n   A user clicking the above link with std processing could see any of the following:\n\n   ```\n   f,f,f,g,g,g,h,h,h\n   f,f,f,g,h,g,g,h,h\n   f,f,f,g,g,h,g,h,h\n   etc.\n   ```\n\n   In sync tx processing, you would more likely see:\n\n   ```\n   f,g,f,g,f,g,h,h,h\n   ```\n\n   because there is *no guarantee* in Fulcro's semantics about the space between two calls to `transact!`. If your\n   application relies on the groupings that happen with the standard tx processing (submissions while holding a thread\n   go into the queue first) then your application may break when you switch to sync processing.\n\n   Note that transactions *are* treated as atomically as possible. So, if you want a specific grouping you should submit\n   it as a single tx:\n\n   ```\n   (transact! [(f) (g)])\n   (transact! [(f) (g)])\n   ```\n\n   is guaranteed to do `f,g,f,g`, and never `f,f,g,g`, though it is still possible to see `f,g,h,f,g,h`.\n\n   This sync transaction processing system allows you to push most (if not all) behavior of even nested transactions into a single\n   synchronous operation. This will lead to significant improvements in the snappiness of the UI for optimistic operation\n   and should also reduce over-rendering (multiple calls to render due to multiple async operations).\n\n   If your remote is mocked as a synchronous operation, then you can also leverage this tx processor to enable\n   completely synchronous testing of your headless Fulcro application.\n\n   WARNING: This tx processing system does *not* support:\n\n   * `ptransact!`: Pessimistic transactions are a legacy feature of Fulcro 2 that is no longer necessary. New\n   applications should not use the feature, and this sync tx processing system does not support it. The call\n   will succeed, but will behave as a normal `transact!`.\n   ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",1,"^9",5,"^:",1,"^;",78],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",["^ ","^F","^G"],"^H",["^I",[]],"^J",["^ ","^F",["^ ","^K",["^L",[["^M","~$&","^N"]]],"^8",87,"^9",4,"^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^O","^P","^Q","^G","^R",true]],"^O","^G","^S",["^ "],"^U",null,"^V",["^ ","^W","^X","^Y","^Z","^[","^[","^10","^11","^12","^[","^13","^13","^14","^14","^Z","^Z","~$m","^15","^16","^16","^17","^16","^18","^19","^15","^15","^X","^X","^19","^19","^11","^11"],"^1:",["^I",["^1;","^1<"]],"~:shadow/js-access-global",["^I",["Error"]],"^1=",null,"~:defs",["^ ","~$distribute-element-results!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",167,"^9",7,"^:",167,"^;",34,"^K",["^L",["~$quote",["^L",[["~$app","~$tx-node",["^ ","~:keys",["~:com.fulcrologic.fulcro.algorithms.tx-processing/results","~:com.fulcrologic.fulcro.algorithms.tx-processing/complete?"],"^1A","~$tx-element"]]]]]],"^6","Distribute results and mark the remotes for those elements as complete."],"^O","^2X","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",34,"~:method-params",["^L",[["^;6","^;7","~$p__50687"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^9",1,"~:variadic?",false,"^8",167,"~:ret-tag",["^I",[null,"~$any"]],"^:",167,"~:max-fixed-arity",3,"~:fn-var",true,"^K",["^L",["^;5",["^L",[["^;6","^;7",["^ ","^;8",["^;9","^;:"],"^1A","^;;"]]]]]],"^6","Distribute results and mark the remotes for those elements as complete."],"~$top-level?",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",95,"^9",7,"^:",95,"^;",17,"^K",["^L",["^;5",["^L",[[["^ ","~:com.fulcrologic.fulcro.application/keys",["~$id"]]]]]]],"^6","Returns true if the current thread is running non-nested transaction processing code."],"^O","^2T","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",17,"^;<",["^L",[["~$p__50663"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",95,"^;A","~$boolean","^:",95,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[[["^ ","^;F",["^;G"]]]]]]],"^6","Returns true if the current thread is running non-nested transaction processing code."],"~$with-synchronous-transactions",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",401,"^9",7,"^:",401,"^;",36,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Installs synchronous transaction processing on a fulcro application.\n\n  ```\n  (defonce app (stx/with-synchronous-transactions\n                 (app/fulcro-app {...})))\n  ```\n\n  This plug-in attempts to do as much work as possible synchronously, including the processing of \"remotes\" that\n  can behave synchronously. This processing system\n  preserves transactional ordering semantics for nested submissions, but cannot guarantee that the overall sequence of\n  operations will exactly match what you'd see if using the standard tx processing.\n\n  The options map you can pass to `transact!` supports most of the same things as the standard tx processing, with the significant exception of\n  `:optimistic? false` (pessimistic transactions). It also *always* assumes synchronous operation, thought the\n  `synchronous?` option (if used) does imply that only the current component should be refreshed in the UI.\n\n  - `:ref` - ident. The component ident to include in the transaction env.\n  - `:component` - React element. The instance of the component that should appear in the transaction env.\n  - `:synchronous?` - When true, causes the rendering to only refresh the calling component (if possible), since the implication\n  is for fast-as-possible refresh semantics, even though this tx processing is already sync.\n  - `:refresh` - A hint. Vector containing idents (of components) and keywords (of props). Things that have changed and should be re-rendered\n    on screen. Only necessary when the underlying rendering algorithm won't auto-detect, such as when UI is derived from the\n    state of other components or outside of the directly queried props. Interpretation depends on the renderer selected:\n    The ident-optimized render treats these as \"extras\".\n  - `:only-refresh` - A hint. Vector of idents/keywords.  If the underlying configured rendering algorithm supports it: The\n    components using these are the *only* things that will be refreshed in the UI, and they may be refreshed immediately on\n    `transact!`. This can be used to avoid the overhead of looking for stale data when you know exactly what\n    you want to refresh on screen as an extra optimization. Idents are *not* checked against queries.\n\n  If the `options` include `:ref` (which comp/transact! sets), then it will be auto-included on the `:refresh` list.\n\n  Returns the transaction ID of the submitted transaction.\n  "],"^O","^4=","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",36,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",401,"^;A",["^I",["~$clj","^;B"]],"^:",401,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Installs synchronous transaction processing on a fulcro application.\n\n  ```\n  (defonce app (stx/with-synchronous-transactions\n                 (app/fulcro-app {...})))\n  ```\n\n  This plug-in attempts to do as much work as possible synchronously, including the processing of \"remotes\" that\n  can behave synchronously. This processing system\n  preserves transactional ordering semantics for nested submissions, but cannot guarantee that the overall sequence of\n  operations will exactly match what you'd see if using the standard tx processing.\n\n  The options map you can pass to `transact!` supports most of the same things as the standard tx processing, with the significant exception of\n  `:optimistic? false` (pessimistic transactions). It also *always* assumes synchronous operation, thought the\n  `synchronous?` option (if used) does imply that only the current component should be refreshed in the UI.\n\n  - `:ref` - ident. The component ident to include in the transaction env.\n  - `:component` - React element. The instance of the component that should appear in the transaction env.\n  - `:synchronous?` - When true, causes the rendering to only refresh the calling component (if possible), since the implication\n  is for fast-as-possible refresh semantics, even though this tx processing is already sync.\n  - `:refresh` - A hint. Vector containing idents (of components) and keywords (of props). Things that have changed and should be re-rendered\n    on screen. Only necessary when the underlying rendering algorithm won't auto-detect, such as when UI is derived from the\n    state of other components or outside of the directly queried props. Interpretation depends on the renderer selected:\n    The ident-optimized render treats these as \"extras\".\n  - `:only-refresh` - A hint. Vector of idents/keywords.  If the underlying configured rendering algorithm supports it: The\n    components using these are the *only* things that will be refreshed in the UI, and they may be refreshed immediately on\n    `transact!`. This can be used to avoid the overhead of looking for stale data when you know exactly what\n    you want to refresh on screen as an extra optimization. Idents are *not* checked against queries.\n\n  If the `options` include `:ref` (which comp/transact! sets), then it will be auto-included on the `:refresh` list.\n\n  Returns the transaction ID of the submitted transaction.\n  "],"~$swap-post-processing-steps!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",103,"^9",7,"^:",103,"^;",34,"^K",["^L",["^;5",["^L",[["^;6","~$&","~$args"]]]]],"~:top-fn",["^ ","^;@",true,"~:fixed-arity",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]]],"^O","^3T","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",34,"^;N",["^ ","^;@",true,"^;O",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]],"^;<",[["^L",["^;6","^;M"]]],"^;>",null,"^;O",1,"^;?",["^L",[null]],"^9",1,"^;@",true,"~:methods",[["^ ","^;O",1,"^;@",true,"~:tag","^;B"]],"^8",103,"^;A","^;B","^:",103,"^;C",1,"^;D",true,"^K",["^L",[["^;6","~$&","^;M"]]]],"~$active-queue",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",108,"^9",7,"^:",108,"^;",19,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"^O","^2Y","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",19,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",108,"^;A","^;B","^:",108,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"~$reset-send-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",110,"^9",7,"^:",110,"^;",24,"^K",["^L",["^;5",["^L",[["^;6","~$remote","~$v"]]]]]],"^O","^2Q","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",24,"^;<",["^L",[["^;6","^;T","~$v"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",110,"^;A",["^I",[null,"^;B"]],"^:",110,"^;C",3,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^;T","~$v"]]]]]],"~$apps-in-tx",["^ ","^O","^43","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",82,"^9",1,"^:",82,"^;",20,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",82,"^9",10,"^:",82,"^;",20],"^;Q","~$cljs.core/Atom"],"~$post-processing-steps",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",105,"^9",7,"^:",105,"^;",28,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"^O","^2Z","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",28,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",105,"^;A","^;B","^:",105,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"~$queue-sends!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",264,"^9",7,"^:",264,"^;",19,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["~:com.fulcrologic.fulcro.algorithms.tx-processing/options","~:com.fulcrologic.fulcro.algorithms.tx-processing/elements"],"^1A","^;7"]]]]]],"^6","Finds any item(s) on the given node that are ready to be placed on the network queues and adds them. Non-optimistic\n  multi-element nodes will only queue one remote operation at a time."],"^O","^2N","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",19,"^;<",["^L",[["^;6","~$p__50704"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",264,"^;A",["^I",[null,"^;B"]],"^:",264,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["^;Y","^;Z"],"^1A","^;7"]]]]]],"^6","Finds any item(s) on the given node that are ready to be placed on the network queues and adds them. Non-optimistic\n  multi-element nodes will only queue one remote operation at a time."],"~$submit-sync-tx!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",374,"^9",7,"^:",374,"^;",22,"^K",["^L",["^;5",["^L",[["^;6","~$tx"],[["^ ","^;F",["~$runtime-atom"],"^1A","^;6"],"^<1","~$options"]]]]],"^;N",["^ ","^;@",false,"^;O",3,"^;C",3,"^;<",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]],"^K",["^L",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]]],"^;?",["^L",[null,null]]]],"^O","^3>","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",22,"^;N",["^ ","^;@",false,"^;O",3,"^;C",3,"^;<",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]],"^K",["^L",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]]],"^;?",["^L",[null,null]]],"^;<",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]],"^;>",null,"^;O",3,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^;P",[["^ ","^;O",2,"^;@",false,"^;Q","^;B"],["^ ","^;O",3,"^;@",false,"^;Q","^;B"]],"^8",374,"^:",374,"^;C",3,"^;D",true,"^K",["^L",[["^;6","^<1"],[["^ ","^;F",["^<2"],"^1A","^;6"],"^<1","^<3"]]]],"~$process-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",307,"^9",7,"^:",307,"^;",21,"^K",["^L",["^;5",["^L",[[["^ ","^;F",["~$state-atom","^<2"],"^1A","^;6"]]]]]],"^6","Run through the active queue and do a processing step."],"^O","^3?","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",21,"^;<",["^L",[["~$p__50748"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",307,"^;A","~$clj-nil","^:",307,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[[["^ ","^;F",["^<5","^<2"],"^1A","^;6"]]]]]],"^6","Run through the active queue and do a processing step."],"~$remove-send!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",214,"^9",7,"^:",214,"^;",19,"^K",["^L",["^;5",["^L",[["^;6","^;T","~$txn-id","~$ele-idx"]]]]],"^6","Removes the send node (if present) from the send queue on the given remote."],"^O","^49","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",19,"^;<",["^L",[["^;6","^;T","^<9","^<:"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",214,"^;A","^;B","^:",214,"^;C",4,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^;T","^<9","^<:"]]]]],"^6","Removes the send node (if present) from the send queue on the given remote."],"~$queue-element-sends!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",247,"^9",7,"^:",247,"^;",27,"^K",["^L",["^;5",["^L",[["^;6","^;7",["^ ","~:com.fulcrologic.fulcro.algorithms.tx-processing/keys",["~$idx","~$dispatch","~$started?"]]]]]]],"^6","Queue all (unqueued) remote actions for the given element.  Returns the (possibly updated) node."],"^O","^3:","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",27,"^;<",["^L",[["^;6","^;7","~$p__50702"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",247,"^;A",["^I",[null,"^;B"]],"^:",247,"^;C",3,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^;7",["^ ","^<<",["^<=","^<>","^<?"]]]]]]],"^6","Queue all (unqueued) remote actions for the given element.  Returns the (possibly updated) node."],"~$run-after!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",113,"^9",7,"^:",113,"^;",17,"^K",["^L",["^;5",["^L",[["^;6","~$f"]]]]],"^6","Add `f` as a function that will run after the current transaction has been fully processed."],"^O","^32","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",17,"^;<",["^L",[["^;6","~$f"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",113,"^;A","^;B","^:",113,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","~$f"]]]]],"^6","Add `f` as a function that will run after the current transaction has been fully processed."],"~$run-all-immediate-work!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",349,"^9",7,"^:",349,"^;",30,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Runs the submission queue. If the submission queue's optimistic actions submit more to the submission queue, then those\n   are processed as well until the submission queue remains empty. This can start network requests."],"^O","^4?","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",30,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",349,"^:",349,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Runs the submission queue. If the submission queue's optimistic actions submit more to the submission queue, then those\n   are processed as well until the submission queue remains empty. This can start network requests."],"~$record-result!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",200,"^9",7,"^:",200,"^;",21,"^K",["^L",["^;5",["^L",[["^;6","^<9","^<:","^;T","~$result","~$result-key"],["^;6","^<9","^<:","^;T","^<D"]]]]],"^6","Deal with a network result on the given txn/element.","^;N",["^ ","^;@",false,"^;O",6,"^;C",6,"^;<",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]],"^K",["^L",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]]],"^;?",["^L",[null,null]]]],"^O","^2F","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",21,"^;N",["^ ","^;@",false,"^;O",6,"^;C",6,"^;<",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]],"^K",["^L",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]]],"^;?",["^L",[null,null]]],"^;<",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]],"^;>",null,"^;O",6,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^;P",[["^ ","^;O",6,"^;@",false,"^;Q",["^I",["^;B","^<7"]]],["^ ","^;O",5,"^;@",false,"^;Q",["^I",["^;B","^<7"]]]],"^8",200,"^:",200,"^;C",6,"^;D",true,"^K",["^L",[["^;6","^<9","^<:","^;T","^<D","^<E"],["^;6","^<9","^<:","^;T","^<D"]]],"^6","Deal with a network result on the given txn/element."],"~$process-tx-node!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",274,"^9",7,"^:",274,"^;",23,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["^;Y"],"^1A","^;7"]]]]]]],"^O","^3B","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",23,"^;<",["^L",[["^;6","~$p__50706"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",274,"^;A",["^I",[null,"^;B","^<7"]],"^:",274,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["^;Y"],"^1A","^;7"]]]]]]],"~$add-send!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",221,"^9",7,"^:",221,"^;",16,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^<<",["^;G","^<3"],"^1A","^;7"],"^<:","^;T"]]]]],"^6","Generate a new send node and add it to the appropriate send queue."],"^O","^3K","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",16,"^;<",["^L",[["^;6","~$p__50696","^<:","^;T"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",221,"^;A","^<7","^:",221,"^;C",4,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^<<",["^;G","^<3"],"^1A","^;7"],"^<:","^;T"]]]]],"^6","Generate a new send node and add it to the appropriate send queue."],"~$do-post-processing!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",123,"^9",7,"^:",123,"^;",26,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Runs the queued post processing steps until the post-processing queue is empty."],"^O","^3F","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",26,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",123,"^;A","^<7","^:",123,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Runs the queued post processing steps until the post-processing queue is empty."],"~$distribute-results!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",190,"^9",7,"^:",190,"^;",26,"^K",["^L",["^;5",["^L",[["^;6","^<9","^<:"]]]]],"^6","Side-effects against the app state to distribute the result for txn-id element at ele-idx. This will call the result\n   handler and mark that remote as complete."],"^O","^27","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",26,"^;<",["^L",[["^;6","^<9","^<:"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",190,"^;A","^;B","^:",190,"^;C",3,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^<9","^<:"]]]]],"^6","Side-effects against the app state to distribute the result for txn-id element at ele-idx. This will call the result\n   handler and mark that remote as complete."],"~$post-processing?",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",118,"^9",7,"^:",118,"^;",23,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Is there post processing to do?"],"^O","^2W","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",23,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",118,"^;A","^;I","^:",118,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Is there post processing to do?"],"~$process-send-queues!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",283,"^9",7,"^:",283,"^;",27,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Process the send queues against the remotes, which will cause idle remotes with queued work to issue network requests."],"^O","^2B","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",27,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",283,"^;A","^<7","^:",283,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Process the send queues against the remotes, which will cause idle remotes with queued work to issue network requests."],"~$swap-active-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",106,"^9",7,"^:",106,"^;",25,"^K",["^L",["^;5",["^L",[["^;6","~$&","^;M"]]]]],"^;N",["^ ","^;@",true,"^;O",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]]],"^O","^39","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",25,"^;N",["^ ","^;@",true,"^;O",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]],"^;<",[["^L",["^;6","^;M"]]],"^;>",null,"^;O",1,"^;?",["^L",[null]],"^9",1,"^;@",true,"^;P",[["^ ","^;O",1,"^;@",true,"^;Q","^;B"]],"^8",106,"^;A","^;B","^:",106,"^;C",1,"^;D",true,"^K",["^L",[["^;6","~$&","^;M"]]]],"~$sync-tx!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",372,"^9",7,"^:",372,"^;",15,"^K",["^L",["^;5",["^L",[["~$&","^;M"]]]]],"^;N",["^ ","^;@",true,"^;O",0,"^;C",0,"^;<",[["^L",["^;M"]]],"^K",["^L",[["~$&","^;M"]]],"^;?",["^L",[null]]]],"^O","^3V","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",15,"^;N",["^ ","^;@",true,"^;O",0,"^;C",0,"^;<",[["^L",["^;M"]]],"^K",["^L",[["~$&","^;M"]]],"^;?",["^L",[null]]],"^;<",[["^L",["^;M"]]],"^;>",null,"^;O",0,"^;?",["^L",[null]],"^9",1,"^;@",true,"^;P",[["^ ","^;O",0,"^;@",true,"^;Q","~$ignore"]],"^8",372,"^;A","^;B","^:",372,"^;C",0,"^;D",true,"^K",["^L",[["~$&","^;M"]]]],"~$in-transaction?",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",136,"^9",7,"^:",136,"^;",22,"^K",["^L",["^;5",["^L",[[["^ ","^;F",["^;G"],"^1A","^;6"]]]]]],"^6","Returns true if the current thread is in the midst of running the optimistic actions of a new transaction."],"^O","^41","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",22,"^;<",["^L",[["~$p__50682"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",136,"^;A","^;I","^:",136,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[[["^ ","^;F",["^;G"],"^1A","^;6"]]]]]],"^6","Returns true if the current thread is in the midst of running the optimistic actions of a new transaction."],"~$available-work?",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",331,"^9",7,"^:",331,"^;",22,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Returns true if the submission queue has work on it that can proceed without any restrictions."],"^O","^3Y","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",22,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",331,"^;A","^;I","^:",331,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Returns true if the submission queue has work on it that can proceed without any restrictions."],"~$reset-post-processing-steps!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",104,"^9",7,"^:",104,"^;",35,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"^O","^42","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",35,"^;<",["^L",[["^;6","~$v"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",104,"^;A",["^I",[null,"^;B"]],"^:",104,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"~$release-post-render-tasks!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",141,"^9",7,"^:",141,"^;",33,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Should be called after the application renders to ensure that transactions blocked until the next render become\n   unblocked. Schedules an activation."],"^O","^30","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",33,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",141,"^;A","^;B","^:",141,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Should be called after the application renders to ensure that transactions blocked until the next render become\n   unblocked. Schedules an activation."],"~$abort!",["^ ","^O","^3E","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",395,"^9",1,"^:",395,"^;",12,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",395,"^9",6,"^:",395,"^;",12],"^6","[app abort-id]\n\n   Implementation of abort when using this tx processing"],"~$send-queue",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",111,"^9",7,"^:",111,"^;",17,"^K",["^L",["^;5",["^L",[["^;6","^;T"]]]]]],"^O","^48","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",17,"^;<",["^L",[["^;6","^;T"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",111,"^;A","^;B","^:",111,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^;T"]]]]]],"~$node-index",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",178,"^9",8,"^:",178,"^;",18,"~:private",true,"^K",["^L",["^;5",["^L",[["~$queue","^<9"]]]]]],"^<Y",true,"^O","^1Z","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",18,"^;<",["^L",[["^<Z","^<9"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",178,"^;A",["^I",[null,"^;B","^<7"]],"^:",178,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^<Z","^<9"]]]]]],"~$reset-active-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",107,"^9",7,"^:",107,"^;",26,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"^O","^3H","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",26,"^;<",["^L",[["^;6","~$v"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",107,"^;A",["^I",[null,"^;B"]],"^:",107,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"~$submission-queue",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",102,"^9",7,"^:",102,"^;",23,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"^O","^21","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",23,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",102,"^;A","^;B","^:",102,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]]],"~$swap-submission-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",100,"^9",7,"^:",100,"^;",29,"^K",["^L",["^;5",["^L",[["^;6","~$&","^;M"]]]]],"^;N",["^ ","^;@",true,"^;O",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]]],"^O","^20","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",29,"^;N",["^ ","^;@",true,"^;O",1,"^;C",1,"^;<",[["^L",["^;6","^;M"]]],"^K",["^L",[["^;6","~$&","^;M"]]],"^;?",["^L",[null]]],"^;<",[["^L",["^;6","^;M"]]],"^;>",null,"^;O",1,"^;?",["^L",[null]],"^9",1,"^;@",true,"^;P",[["^ ","^;O",1,"^;@",true,"^;Q","^;B"]],"^8",100,"^;A","^;B","^:",100,"^;C",1,"^;D",true,"^K",["^L",[["^;6","~$&","^;M"]]]],"~$run-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",358,"^9",7,"^:",358,"^;",17,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["~$component","~$synchronous?"],"^1A","^<3"]]]]]]],"^O","^1[","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",17,"^;<",["^L",[["^;6","~$p__50754"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",358,"^;A","^<7","^:",358,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6",["^ ","^;8",["^=3","^=4"],"^1A","^<3"]]]]]]],"~$activate-submissions!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",337,"^9",7,"^:",337,"^;",28,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Activate all of the transactions that have been submitted since the last activation. After the items are activated\n  a single processing step will run for the active queue.\n\n  Activation can be blocked by the tx-node options for things like waiting for the next render frame."],"^O","^24","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",28,"^;<",["^L",[["^;6"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",337,"^;A","^<7","^:",337,"^;C",1,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6"]]]]],"^6","Activate all of the transactions that have been submitted since the last activation. After the items are activated\n  a single processing step will run for the active queue.\n\n  Activation can be blocked by the tx-node options for things like waiting for the next render frame."],"~$reset-submission-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",101,"^9",7,"^:",101,"^;",30,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"^O","^1T","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",30,"^;<",["^L",[["^;6","~$v"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",101,"^;A",["^I",[null,"^;B"]],"^:",101,"^;C",2,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","~$v"]]]]]],"~$swap-send-queue!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",109,"^9",7,"^:",109,"^;",23,"^K",["^L",["^;5",["^L",[["^;6","^;T","~$&","^;M"]]]]],"^;N",["^ ","^;@",true,"^;O",2,"^;C",2,"^;<",[["^L",["^;6","^;T","^;M"]]],"^K",["^L",[["^;6","^;T","~$&","^;M"]]],"^;?",["^L",[null]]]],"^O","^45","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",23,"^;N",["^ ","^;@",true,"^;O",2,"^;C",2,"^;<",[["^L",["^;6","^;T","^;M"]]],"^K",["^L",[["^;6","^;T","~$&","^;M"]]],"^;?",["^L",[null]]],"^;<",[["^L",["^;6","^;T","^;M"]]],"^;>",null,"^;O",2,"^;?",["^L",[null]],"^9",1,"^;@",true,"^;P",[["^ ","^;O",2,"^;@",true,"^;Q","^;B"]],"^8",109,"^;A","^;B","^:",109,"^;C",2,"^;D",true,"^K",["^L",[["^;6","^;T","~$&","^;M"]]]],"~$dispatch-result!",["^ ","^;4",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^8",147,"^9",7,"^:",147,"^;",23,"^K",["^L",["^;5",["^L",[["^;6","^;7",["^ ","^<<",["~$results","^<>","~$desired-ast-nodes","~$transmitted-ast-nodes","~$original-ast-node"],"^1A","^;;"],"^;T"]]]]],"^6","Figure out the dispatch routine to trigger for the given network result.  If it exists, send the result\n  to it.\n\n  Returns the tx-element with the remote marked complete."],"^O","^2=","^7","com/fulcrologic/fulcro/algorithms/tx_processing/synchronous_tx_processing.cljc","^;",23,"^;<",["^L",[["^;6","^;7","~$p__50684","^;T"]]],"^;>",null,"^;?",["^L",[null,null]],"^9",1,"^;@",false,"^8",147,"^;A",["^I",["^;K","^;B"]],"^:",147,"^;C",4,"^;D",true,"^K",["^L",["^;5",["^L",[["^;6","^;7",["^ ","^<<",["^=:","^<>","^=;","^=<","^=="],"^1A","^;;"],"^;T"]]]]],"^6","Figure out the dispatch routine to trigger for the given network result.  If it exists, send the result\n  to it.\n\n  Returns the tx-element with the remote marked complete."]],"^1<",["^ ","^G","^G","^13","^13","^10","^11","~$m","^15","^15","^15","^11","^11"],"~:cljs.analyzer/constants",["^ ","^1:",["^I",["~:only-refresh","~:com.fulcrologic.fulcro.algorithms.tx-processing/send-queue","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/post-processing-steps","^;9","~:transacted-ast","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active-queue","~:com.fulcrologic.fulcro.algorithms.tx-processing/ast","~:com.fulcrologic.fulcro.algorithms.tx-processing/update-handler","~:refresh","~:ref","~:synchronous?","~:render!","~:transmitted-ast","~:com.fulcrologic.fulcro.algorithm/abort!","~:com.fulcrologic.fulcro.algorithm/tx!","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/config","~:status-code","~:after-render?","~:component","^;Z","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:com.fulcrologic.fulcro.application/id","~:dispatch","~:refresh-component!","~:com.fulcrologic.fulcro.application/to-refresh","~:mutation-ast","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/send-queues","~:result","~:com.fulcrologic.fulcro.application/runtime-atom","~:com.fulcrologic.fulcro.algorithms.tx-processing/dispatch","~:com.fulcrologic.fulcro.algorithms.tx-processing/started?","~:dispatch-key","~:com.fulcrologic.fulcro.application/algorithms","~:com.fulcrologic.fulcro.algorithms.tx-processing/id","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/active?","~:error","~:result-action","~:com.fulcrologic.fulcro.algorithms.tx-processing/progress","~:body","^;Y","~:com.fulcrologic.fulcro.algorithms.tx-processing.synchronous-tx-processing/submission-queue","~:auto","~:p","~:com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node","~:com.fulcrologic.fulcro.application/remotes","~:com.fulcrologic.fulcro.algorithms.tx-processing/send-node","~:com.fulcrologic.fulcro.application/active-remotes","~:com.fulcrologic.fulcro.algorithms.tx-processing/active?","^;:","~:com.fulcrologic.fulcro.algorithms.tx-processing/idx","~:com.fulcrologic.fulcro.algorithms.tx-processing/desired-ast-nodes","~:com.fulcrologic.fulcro.algorithms.tx-processing/result-handler","~:com.fulcrologic.fulcro.algorithms.tx-processing/transmitted-ast-nodes"]],"~:order",["^=T","^=N","^>:","^=B","^=D","^=Y","^>6","~:p","^>;","^;Y","^=P","^;9","^>0","^>B","^>D","^><","^>7","^=U","^=C","^=X","^=K","^=Z","^>2","^;:","^>4","^;Z","^>A","^>8","^=E","^>@","^>C","^=F","^=O","^>9","^>1","^>5","^=A","^>>","^=R","^=[","^>?","^=W","^=Q","^=I","^=V","^=J","^=G","^=@","^=H","^=S","^>=","^>3","^=M","^=L"]],"^1B",["^ ","^1<",["^I",[]],"^1;",["^I",[]]],"^1C",["^ "],"^1D",["^14","^13","^Z","^19","^16","^X","^15","^[","^11"]],"^Q","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^4D",[["^>H","~:static-fns"],true,["^>H","~:shadow-tweaks"],null,["^>H","~:source-map-inline"],null,["^>H","~:elide-asserts"],false,["^>H","~:optimize-constants"],null,["^>H","^1I"],null,["^>H","~:external-config"],null,["^>H","~:tooling-config"],null,["^>H","~:emit-constants"],null,["^>H","~:load-tests"],null,["^>H","~:form-size-threshold"],null,["^>H","~:global-goog-object&array"],null,["^>H","~:data-readers"],null,["^>H","~:infer-externs"],"^>;",["^>H","^1K"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>H","~:fn-invoke-direct"],null,["^>H","~:source-map"],"/dev/null"]]]