{"version":3,"sources":["app/client.cljs"],"mappings":";AAMA,GAAA,QAAAA,gCAAAC,uCAAAC;AAAA;AAAA,AAAA,AAASC,kBAAK,AAACC;;AAEf,AAAA,AAAA;AAAA,IAAAC,+BAAA,2CAAA,0DAAA,iCAAaQ;AAAb,AAAA,OAAAP,uDAAA,NAAaO;AAAb,AAAA,YAAA,CAAAN,wEAAAA,+EAAAA,TAAaM,2DAAAA,lNAAKC;AAAlB,AACE,OAAAC,sDAAA,CAAA,MAAA,KAAA;;;AADF,AAAA,GAAA,QAAAf,gCAAAC,uCAAAO;AAAA;AAAA,AAAA;;;kBAAA,AAAAC,oDAAA,AAAAC,4CAAAL,6BAAA,/IAAOO;;;AAAP,AAAAD,4EAAA,wEAAAN,xFAAOO;AAGP;;;kBAAA,lBAAeI;AAAf,AAGE,6GAAA,7GAACC,6EAAWd,gBAAKS;;AACjB,mBAAA,ZAACM;;;AAEH;;;qBAAA,rBAAeC;AAAf,AAIE,6GAAA,7GAACF,6EAAWd,gBAAKS;;AAEjB,AAACQ,8FAA8BjB;;AAC/B,mBAAA,ZAACe","names":["js/app","js/app.client","js/app.client.app1","app.client/app1","com.fulcrologic.fulcro.application.fulcro_app","options__34841__auto__","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/app.client.Root","com.fulcrologic.fulcro.components/react-constructor","cljs.core.get","com.fulcrologic.fulcro.components/configure-component!","app.client/Root","this","props","com.fulcrologic.fulcro.dom/macro-create-element*","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_","js/console.log","app.client/refresh","com.fulcrologic.fulcro.components.refresh_dynamic_queries_BANG_"],"sourcesContent":["(ns app.client\n  (:require\n   [com.fulcrologic.fulcro.application :as app]\n   [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n   [com.fulcrologic.fulcro.dom :as dom]))\n\n(defonce app1 (app/fulcro-app))\n\n(defsc Root [this props]\n  (dom/div \"TODO\"))\n\n(defn ^:export init\n  \"Shadow-cljs sets this up to be our entry-point function. See shadow-cljs.edn `:init-fn` in the modules of the main build.\"\n  []\n  (app/mount! app1 Root \"app\")\n  (js/console.log \"Loaded\"))\n\n(defn ^:export refresh\n  \"During development, shadow-cljs will call this on every hot reload of source. See shadow-cljs.edn\"\n  []\n  ;; re-mounting will cause forced UI refresh, update internals, etc.\n  (app/mount! app1 Root \"app\")\n  ;; As of Fulcro 3.3.0, this addition will help with stale queries when using dynamic routing:\n  (comp/refresh-dynamic-queries! app1)\n  (js/console.log \"Hot reload\"))"]}